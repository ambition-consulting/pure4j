FORCE java/lang/AbstractStringBuilder.<init>()V
FORCE java/lang/AbstractStringBuilder.<init>(I)V
FORCE java/lang/AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(C)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.appendNull()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.capacity()I
FORCE java/lang/AbstractStringBuilder.charAt(I)C
FORCE java/lang/AbstractStringBuilder.codePointAt(I)I
FORCE java/lang/AbstractStringBuilder.codePointBefore(I)I
FORCE java/lang/AbstractStringBuilder.codePointCount(II)I
FORCE java/lang/AbstractStringBuilder.ensureCapacity(I)V
FORCE java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V
FORCE java/lang/AbstractStringBuilder.getValue()[C
FORCE java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;)I
FORCE java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;I)I
FORCE java/lang/AbstractStringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/AbstractStringBuilder.length()I
FORCE java/lang/AbstractStringBuilder.offsetByCodePoints(II)I
FORCE java/lang/AbstractStringBuilder.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.reverseAllValidSurrogatePairs()V
FORCE java/lang/AbstractStringBuilder.setCharAt(IC)V
FORCE java/lang/AbstractStringBuilder.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/AbstractStringBuilder.substring(I)Ljava/lang/String;
FORCE java/lang/AbstractStringBuilder.substring(II)Ljava/lang/String;
FORCE java/lang/AbstractStringBuilder.toString()Ljava/lang/String;
FORCE java/lang/Boolean.<init>(Ljava/lang/String;)V
FORCE java/lang/Boolean.<init>(Z)V
FORCE java/lang/Boolean.booleanValue()Z
FORCE java/lang/Boolean.compare(ZZ)I
FORCE java/lang/Boolean.compareTo(Ljava/lang/Boolean;)I
FORCE java/lang/Boolean.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Boolean.equals(Ljava/lang/Object;)Z
FORCE java/lang/Boolean.hashCode()I
FORCE java/lang/Boolean.hashCode(Z)I
FORCE java/lang/Boolean.logicalAnd(ZZ)Z
FORCE java/lang/Boolean.logicalOr(ZZ)Z
FORCE java/lang/Boolean.logicalXor(ZZ)Z
FORCE java/lang/Boolean.parseBoolean(Ljava/lang/String;)Z
FORCE java/lang/Boolean.toString()Ljava/lang/String;
FORCE java/lang/Boolean.toString(Z)Ljava/lang/String;
FORCE java/lang/Boolean.valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
FORCE java/lang/Boolean.valueOf(Z)Ljava/lang/Boolean;
FORCE java/lang/Character$Subset.<init>(Ljava/lang/String;)V
FORCE java/lang/Character$Subset.equals(Ljava/lang/Object;)Z
FORCE java/lang/Character$Subset.toString()Ljava/lang/String;
FORCE java/lang/Character$UnicodeBlock.of(C)Ljava/lang/Character$UnicodeBlock;
FORCE java/lang/Character$UnicodeBlock.of(I)Ljava/lang/Character$UnicodeBlock;
FORCE java/lang/Character$UnicodeScript.<init>(Ljava/lang/String;I)V
FORCE java/lang/Character$UnicodeScript.valueOf(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;
FORCE java/lang/Character$UnicodeScript.values()[Ljava/lang/Character$UnicodeScript;
FORCE java/lang/Character.<init>(C)V
FORCE java/lang/Character.charCount(I)I
FORCE java/lang/Character.charValue()C
FORCE java/lang/Character.codePointAt(Ljava/lang/CharSequence;I)I
FORCE java/lang/Character.codePointAt([CI)I
FORCE java/lang/Character.codePointAt([CII)I
FORCE java/lang/Character.codePointAtImpl([CII)I
FORCE java/lang/Character.codePointBefore(Ljava/lang/CharSequence;I)I
FORCE java/lang/Character.codePointBefore([CI)I
FORCE java/lang/Character.codePointBefore([CII)I
FORCE java/lang/Character.codePointBeforeImpl([CII)I
FORCE java/lang/Character.codePointCount(Ljava/lang/CharSequence;II)I
FORCE java/lang/Character.codePointCount([CII)I
FORCE java/lang/Character.codePointCountImpl([CII)I
FORCE java/lang/Character.compare(CC)I
FORCE java/lang/Character.compareTo(Ljava/lang/Character;)I
FORCE java/lang/Character.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Character.digit(CI)I
FORCE java/lang/Character.equals(Ljava/lang/Object;)Z
FORCE java/lang/Character.forDigit(II)C
FORCE java/lang/Character.getDirectionality(C)B
FORCE java/lang/Character.getNumericValue(C)I
FORCE java/lang/Character.getType(C)I
FORCE java/lang/Character.hashCode()I
FORCE java/lang/Character.hashCode(C)I
FORCE java/lang/Character.highSurrogate(I)C
FORCE java/lang/Character.isBmpCodePoint(I)Z
FORCE java/lang/Character.isDefined(C)Z
FORCE java/lang/Character.isDefined(I)Z
FORCE java/lang/Character.isDigit(C)Z
FORCE java/lang/Character.isDigit(I)Z
FORCE java/lang/Character.isHighSurrogate(C)Z
FORCE java/lang/Character.isISOControl(C)Z
FORCE java/lang/Character.isISOControl(I)Z
FORCE java/lang/Character.isIdentifierIgnorable(C)Z
FORCE java/lang/Character.isJavaIdentifierPart(C)Z
FORCE java/lang/Character.isJavaIdentifierStart(C)Z
FORCE java/lang/Character.isJavaLetter(C)Z
FORCE java/lang/Character.isJavaLetterOrDigit(C)Z
FORCE java/lang/Character.isLetter(C)Z
FORCE java/lang/Character.isLetter(I)Z
FORCE java/lang/Character.isLetterOrDigit(C)Z
FORCE java/lang/Character.isLetterOrDigit(I)Z
FORCE java/lang/Character.isLowSurrogate(C)Z
FORCE java/lang/Character.isLowerCase(C)Z
FORCE java/lang/Character.isMirrored(C)Z
FORCE java/lang/Character.isSpace(C)Z
FORCE java/lang/Character.isSpaceChar(C)Z
FORCE java/lang/Character.isSpaceChar(I)Z
FORCE java/lang/Character.isSupplementaryCodePoint(I)Z
FORCE java/lang/Character.isSurrogate(C)Z
FORCE java/lang/Character.isSurrogatePair(CC)Z
FORCE java/lang/Character.isTitleCase(C)Z
FORCE java/lang/Character.isTitleCase(I)Z
FORCE java/lang/Character.isUnicodeIdentifierPart(C)Z
FORCE java/lang/Character.isUnicodeIdentifierStart(C)Z
FORCE java/lang/Character.isUpperCase(C)Z
FORCE java/lang/Character.isValidCodePoint(I)Z
FORCE java/lang/Character.isWhitespace(C)Z
FORCE java/lang/Character.lowSurrogate(I)C
FORCE java/lang/Character.offsetByCodePoints(Ljava/lang/CharSequence;II)I
FORCE java/lang/Character.offsetByCodePoints([CIIII)I
FORCE java/lang/Character.offsetByCodePointsImpl([CIIII)I
FORCE java/lang/Character.reverseBytes(C)C
FORCE java/lang/Character.toChars(I)[C
FORCE java/lang/Character.toChars(I[CI)I
FORCE java/lang/Character.toCodePoint(CC)I
FORCE java/lang/Character.toLowerCase(C)C
FORCE java/lang/Character.toString()Ljava/lang/String;
FORCE java/lang/Character.toString(C)Ljava/lang/String;
FORCE java/lang/Character.toSurrogates(I[CI)V
FORCE java/lang/Character.toTitleCase(C)C
FORCE java/lang/Character.toUpperCase(C)C
FORCE java/lang/Character.valueOf(C)Ljava/lang/Character;
FORCE java/lang/Class.access$100(Ljava/lang/Class;Z)[Ljava/lang/reflect/Field;
FORCE java/lang/Class.access$200([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;
FORCE java/lang/Class.access$300([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/lang/Class.access$402(Z)Z
FORCE java/lang/Class.access$502(Z)Z
FORCE java/lang/Class.addAll(Ljava/util/Collection;[Ljava/lang/reflect/Field;)V
FORCE java/lang/Class.argumentTypesToString([Ljava/lang/Class;)Ljava/lang/String;
FORCE java/lang/Class.arrayContentsEq([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/lang/Class.asSubclass(Ljava/lang/Class;)Ljava/lang/Class;
FORCE java/lang/Class.cannotCastMsg(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/lang/Class.cast(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/lang/Class.desiredAssertionStatus0(Ljava/lang/Class;)Z
FORCE java/lang/Class.enumConstantDirectory()Ljava/util/Map;
FORCE java/lang/Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;
FORCE java/lang/Class.getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
FORCE java/lang/Class.getAnnotationType()Lsun/reflect/annotation/AnnotationType;
FORCE java/lang/Class.getCanonicalName()Ljava/lang/String;
FORCE java/lang/Class.getComponentType()Ljava/lang/Class;
FORCE java/lang/Class.getConstantPool()Lsun/reflect/ConstantPool;
FORCE java/lang/Class.getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
FORCE java/lang/Class.getDeclaredAnnotationMap()Ljava/util/Map;
FORCE java/lang/Class.getDeclaredClasses0()[Ljava/lang/Class;
FORCE java/lang/Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;
FORCE java/lang/Class.getDeclaredFields0(Z)[Ljava/lang/reflect/Field;
FORCE java/lang/Class.getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;
FORCE java/lang/Class.getDeclaringClass0()Ljava/lang/Class;
FORCE java/lang/Class.getEnclosingMethod0()[Ljava/lang/Object;
FORCE java/lang/Class.getEnumConstants()[Ljava/lang/Object;
FORCE java/lang/Class.getField0(Ljava/lang/String;)Ljava/lang/reflect/Field;
FORCE java/lang/Class.getGenericSignature0()Ljava/lang/String;
FORCE java/lang/Class.getInterfaces()[Ljava/lang/Class;
FORCE java/lang/Class.getInterfaces0()[Ljava/lang/Class;
FORCE java/lang/Class.getModifiers()I
FORCE java/lang/Class.getName()Ljava/lang/String;
FORCE java/lang/Class.getName0()Ljava/lang/String;
FORCE java/lang/Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;
FORCE java/lang/Class.getProtectionDomain0()Ljava/security/ProtectionDomain;
FORCE java/lang/Class.getRawAnnotations()[B
FORCE java/lang/Class.getRawTypeAnnotations()[B
FORCE java/lang/Class.getSigners()[Ljava/lang/Object;
FORCE java/lang/Class.getSimpleBinaryName()Ljava/lang/String;
FORCE java/lang/Class.getSimpleName()Ljava/lang/String;
FORCE java/lang/Class.getSuperclass()Ljava/lang/Class;
FORCE java/lang/Class.getTypeName()Ljava/lang/String;
FORCE java/lang/Class.isAnnotation()Z
FORCE java/lang/Class.isAnnotationPresent(Ljava/lang/Class;)Z
FORCE java/lang/Class.isAnonymousClass()Z
FORCE java/lang/Class.isArray()Z
FORCE java/lang/Class.isAsciiDigit(C)Z
FORCE java/lang/Class.isAssignableFrom(Ljava/lang/Class;)Z
FORCE java/lang/Class.isEnum()Z
FORCE java/lang/Class.isInstance(Ljava/lang/Object;)Z
FORCE java/lang/Class.isInterface()Z
FORCE java/lang/Class.isLocalClass()Z
FORCE java/lang/Class.isLocalOrAnonymousClass()Z
FORCE java/lang/Class.isMemberClass()Z
FORCE java/lang/Class.isPrimitive()Z
FORCE java/lang/Class.isSynthetic()Z
FORCE java/lang/Class.privateGetDeclaredConstructors(Z)[Ljava/lang/reflect/Constructor;
FORCE java/lang/Class.registerNatives()V
FORCE java/lang/Class.resolveName(Ljava/lang/String;)Ljava/lang/String;
FORCE java/lang/Class.setSigners([Ljava/lang/Object;)V
FORCE java/lang/Class.toString()Ljava/lang/String;
FORCE java/lang/Double.<init>(D)V
FORCE java/lang/Double.<init>(Ljava/lang/String;)V
FORCE java/lang/Double.byteValue()B
FORCE java/lang/Double.compare(DD)I
FORCE java/lang/Double.compareTo(Ljava/lang/Double;)I
FORCE java/lang/Double.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Double.doubleToLongBits(D)J
FORCE java/lang/Double.doubleToRawLongBits(D)J
FORCE java/lang/Double.doubleValue()D
FORCE java/lang/Double.equals(Ljava/lang/Object;)Z
FORCE java/lang/Double.floatValue()F
FORCE java/lang/Double.hashCode()I
FORCE java/lang/Double.hashCode(D)I
FORCE java/lang/Double.intValue()I
FORCE java/lang/Double.isFinite(D)Z
FORCE java/lang/Double.isInfinite()Z
FORCE java/lang/Double.isInfinite(D)Z
FORCE java/lang/Double.isNaN()Z
FORCE java/lang/Double.isNaN(D)Z
FORCE java/lang/Double.longBitsToDouble(J)D
FORCE java/lang/Double.longValue()J
FORCE java/lang/Double.max(DD)D
FORCE java/lang/Double.min(DD)D
FORCE java/lang/Double.shortValue()S
FORCE java/lang/Double.sum(DD)D
FORCE java/lang/Double.toHexString(D)Ljava/lang/String;
FORCE java/lang/Double.toString()Ljava/lang/String;
FORCE java/lang/Double.valueOf(D)Ljava/lang/Double;
FORCE java/lang/Double.valueOf(Ljava/lang/String;)Ljava/lang/Double;
FORCE java/lang/Enum.<init>(Ljava/lang/String;I)V
FORCE java/lang/Enum.clone()Ljava/lang/Object;
FORCE java/lang/Enum.compareTo(Ljava/lang/Enum;)I
FORCE java/lang/Enum.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Enum.equals(Ljava/lang/Object;)Z
FORCE java/lang/Enum.finalize()V
FORCE java/lang/Enum.getDeclaringClass()Ljava/lang/Class;
FORCE java/lang/Enum.hashCode()I
FORCE java/lang/Enum.name()Ljava/lang/String;
FORCE java/lang/Enum.ordinal()I
FORCE java/lang/Enum.readObject(Ljava/io/ObjectInputStream;)V
FORCE java/lang/Enum.readObjectNoData()V
FORCE java/lang/Enum.toString()Ljava/lang/String;
FORCE java/lang/Enum.valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
FORCE java/lang/Float.<init>(D)V
FORCE java/lang/Float.<init>(F)V
FORCE java/lang/Float.<init>(Ljava/lang/String;)V
FORCE java/lang/Float.byteValue()B
FORCE java/lang/Float.compare(FF)I
FORCE java/lang/Float.compareTo(Ljava/lang/Float;)I
FORCE java/lang/Float.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Float.doubleValue()D
FORCE java/lang/Float.equals(Ljava/lang/Object;)Z
FORCE java/lang/Float.floatToIntBits(F)I
FORCE java/lang/Float.floatToRawIntBits(F)I
FORCE java/lang/Float.floatValue()F
FORCE java/lang/Float.hashCode()I
FORCE java/lang/Float.hashCode(F)I
FORCE java/lang/Float.intBitsToFloat(I)F
FORCE java/lang/Float.intValue()I
FORCE java/lang/Float.isFinite(F)Z
FORCE java/lang/Float.isInfinite()Z
FORCE java/lang/Float.isInfinite(F)Z
FORCE java/lang/Float.isNaN()Z
FORCE java/lang/Float.isNaN(F)Z
FORCE java/lang/Float.longValue()J
FORCE java/lang/Float.max(FF)F
FORCE java/lang/Float.min(FF)F
FORCE java/lang/Float.shortValue()S
FORCE java/lang/Float.sum(FF)F
FORCE java/lang/Float.toHexString(F)Ljava/lang/String;
FORCE java/lang/Float.toString()Ljava/lang/String;
FORCE java/lang/Float.valueOf(F)Ljava/lang/Float;
FORCE java/lang/Float.valueOf(Ljava/lang/String;)Ljava/lang/Float;
FORCE java/lang/Integer.<init>(I)V
FORCE java/lang/Integer.<init>(Ljava/lang/String;)V
FORCE java/lang/Integer.bitCount(I)I
FORCE java/lang/Integer.byteValue()B
FORCE java/lang/Integer.compare(II)I
FORCE java/lang/Integer.compareTo(Ljava/lang/Integer;)I
FORCE java/lang/Integer.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Integer.compareUnsigned(II)I
FORCE java/lang/Integer.decode(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.divideUnsigned(II)I
FORCE java/lang/Integer.doubleValue()D
FORCE java/lang/Integer.equals(Ljava/lang/Object;)Z
FORCE java/lang/Integer.floatValue()F
FORCE java/lang/Integer.getInteger(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.getInteger(Ljava/lang/String;I)Ljava/lang/Integer;
FORCE java/lang/Integer.hashCode()I
FORCE java/lang/Integer.hashCode(I)I
FORCE java/lang/Integer.highestOneBit(I)I
FORCE java/lang/Integer.intValue()I
FORCE java/lang/Integer.longValue()J
FORCE java/lang/Integer.lowestOneBit(I)I
FORCE java/lang/Integer.max(II)I
FORCE java/lang/Integer.min(II)I
FORCE java/lang/Integer.numberOfLeadingZeros(I)I
FORCE java/lang/Integer.numberOfTrailingZeros(I)I
FORCE java/lang/Integer.parseInt(Ljava/lang/String;)I
FORCE java/lang/Integer.parseUnsignedInt(Ljava/lang/String;)I
FORCE java/lang/Integer.remainderUnsigned(II)I
FORCE java/lang/Integer.reverse(I)I
FORCE java/lang/Integer.reverseBytes(I)I
FORCE java/lang/Integer.rotateLeft(II)I
FORCE java/lang/Integer.rotateRight(II)I
FORCE java/lang/Integer.shortValue()S
FORCE java/lang/Integer.signum(I)I
FORCE java/lang/Integer.sum(II)I
FORCE java/lang/Integer.toBinaryString(I)Ljava/lang/String;
FORCE java/lang/Integer.toHexString(I)Ljava/lang/String;
FORCE java/lang/Integer.toOctalString(I)Ljava/lang/String;
FORCE java/lang/Integer.toString()Ljava/lang/String;
FORCE java/lang/Integer.toString(I)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedLong(I)J
FORCE java/lang/Integer.toUnsignedString(I)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedString(II)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedString0(II)Ljava/lang/String;
FORCE java/lang/Integer.valueOf(I)Ljava/lang/Integer;
FORCE java/lang/Integer.valueOf(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.valueOf(Ljava/lang/String;I)Ljava/lang/Integer;
FORCE java/lang/Long.<init>(J)V
FORCE java/lang/Long.<init>(Ljava/lang/String;)V
FORCE java/lang/Long.bitCount(J)I
FORCE java/lang/Long.byteValue()B
FORCE java/lang/Long.compare(JJ)I
FORCE java/lang/Long.compareTo(Ljava/lang/Long;)I
FORCE java/lang/Long.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Long.compareUnsigned(JJ)I
FORCE java/lang/Long.decode(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.divideUnsigned(JJ)J
FORCE java/lang/Long.doubleValue()D
FORCE java/lang/Long.equals(Ljava/lang/Object;)Z
FORCE java/lang/Long.floatValue()F
FORCE java/lang/Long.getLong(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.getLong(Ljava/lang/String;J)Ljava/lang/Long;
FORCE java/lang/Long.hashCode()I
FORCE java/lang/Long.hashCode(J)I
FORCE java/lang/Long.highestOneBit(J)J
FORCE java/lang/Long.intValue()I
FORCE java/lang/Long.longValue()J
FORCE java/lang/Long.lowestOneBit(J)J
FORCE java/lang/Long.max(JJ)J
FORCE java/lang/Long.min(JJ)J
FORCE java/lang/Long.numberOfLeadingZeros(J)I
FORCE java/lang/Long.numberOfTrailingZeros(J)I
FORCE java/lang/Long.parseLong(Ljava/lang/String;)J
FORCE java/lang/Long.parseUnsignedLong(Ljava/lang/String;)J
FORCE java/lang/Long.remainderUnsigned(JJ)J
FORCE java/lang/Long.reverse(J)J
FORCE java/lang/Long.reverseBytes(J)J
FORCE java/lang/Long.rotateLeft(JI)J
FORCE java/lang/Long.rotateRight(JI)J
FORCE java/lang/Long.shortValue()S
FORCE java/lang/Long.signum(J)I
FORCE java/lang/Long.stringSize(J)I
FORCE java/lang/Long.sum(JJ)J
FORCE java/lang/Long.toBinaryString(J)Ljava/lang/String;
FORCE java/lang/Long.toHexString(J)Ljava/lang/String;
FORCE java/lang/Long.toOctalString(J)Ljava/lang/String;
FORCE java/lang/Long.toString()Ljava/lang/String;
FORCE java/lang/Long.toString(J)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString(J)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString(JI)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString0(JI)Ljava/lang/String;
FORCE java/lang/Long.valueOf(J)Ljava/lang/Long;
FORCE java/lang/Long.valueOf(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.valueOf(Ljava/lang/String;I)Ljava/lang/Long;
FORCE java/lang/Math.<init>()V
FORCE java/lang/Math.IEEEremainder(DD)D
FORCE java/lang/Math.abs(D)D
FORCE java/lang/Math.abs(F)F
FORCE java/lang/Math.abs(I)I
FORCE java/lang/Math.abs(J)J
FORCE java/lang/Math.acos(D)D
FORCE java/lang/Math.addExact(II)I
FORCE java/lang/Math.addExact(JJ)J
FORCE java/lang/Math.asin(D)D
FORCE java/lang/Math.atan(D)D
FORCE java/lang/Math.atan2(DD)D
FORCE java/lang/Math.cbrt(D)D
FORCE java/lang/Math.ceil(D)D
FORCE java/lang/Math.copySign(DD)D
FORCE java/lang/Math.copySign(FF)F
FORCE java/lang/Math.cos(D)D
FORCE java/lang/Math.cosh(D)D
FORCE java/lang/Math.decrementExact(I)I
FORCE java/lang/Math.decrementExact(J)J
FORCE java/lang/Math.exp(D)D
FORCE java/lang/Math.expm1(D)D
FORCE java/lang/Math.floor(D)D
FORCE java/lang/Math.floorDiv(II)I
FORCE java/lang/Math.floorDiv(JJ)J
FORCE java/lang/Math.floorMod(II)I
FORCE java/lang/Math.floorMod(JJ)J
FORCE java/lang/Math.getExponent(D)I
FORCE java/lang/Math.getExponent(F)I
FORCE java/lang/Math.hypot(DD)D
FORCE java/lang/Math.incrementExact(I)I
FORCE java/lang/Math.incrementExact(J)J
FORCE java/lang/Math.log(D)D
FORCE java/lang/Math.log10(D)D
FORCE java/lang/Math.log1p(D)D
FORCE java/lang/Math.max(II)I
FORCE java/lang/Math.max(JJ)J
FORCE java/lang/Math.min(II)I
FORCE java/lang/Math.min(JJ)J
FORCE java/lang/Math.multiplyExact(II)I
FORCE java/lang/Math.multiplyExact(JJ)J
FORCE java/lang/Math.negateExact(I)I
FORCE java/lang/Math.negateExact(J)J
FORCE java/lang/Math.nextAfter(DD)D
FORCE java/lang/Math.nextAfter(FD)F
FORCE java/lang/Math.nextDown(D)D
FORCE java/lang/Math.nextDown(F)F
FORCE java/lang/Math.nextUp(D)D
FORCE java/lang/Math.nextUp(F)F
FORCE java/lang/Math.pow(DD)D
FORCE java/lang/Math.powerOfTwoD(I)D
FORCE java/lang/Math.powerOfTwoF(I)F
FORCE java/lang/Math.rint(D)D
FORCE java/lang/Math.round(D)J
FORCE java/lang/Math.round(F)I
FORCE java/lang/Math.scalb(FI)F
FORCE java/lang/Math.signum(D)D
FORCE java/lang/Math.signum(F)F
FORCE java/lang/Math.sin(D)D
FORCE java/lang/Math.sinh(D)D
FORCE java/lang/Math.sqrt(D)D
FORCE java/lang/Math.subtractExact(II)I
FORCE java/lang/Math.subtractExact(JJ)J
FORCE java/lang/Math.tan(D)D
FORCE java/lang/Math.tanh(D)D
FORCE java/lang/Math.toDegrees(D)D
FORCE java/lang/Math.toIntExact(J)I
FORCE java/lang/Math.toRadians(D)D
FORCE java/lang/Math.ulp(D)D
FORCE java/lang/Math.ulp(F)F
FORCE java/lang/Number.<init>()V
FORCE java/lang/Number.byteValue()B
FORCE java/lang/Number.doubleValue()D
FORCE java/lang/Number.floatValue()F
FORCE java/lang/Number.intValue()I
FORCE java/lang/Number.longValue()J
FORCE java/lang/Number.shortValue()S
FORCE java/lang/StrictMath.<init>()V
FORCE java/lang/StrictMath.IEEEremainder(DD)D
FORCE java/lang/StrictMath.abs(D)D
FORCE java/lang/StrictMath.abs(F)F
FORCE java/lang/StrictMath.abs(I)I
FORCE java/lang/StrictMath.abs(J)J
FORCE java/lang/StrictMath.acos(D)D
FORCE java/lang/StrictMath.addExact(II)I
FORCE java/lang/StrictMath.addExact(JJ)J
FORCE java/lang/StrictMath.asin(D)D
FORCE java/lang/StrictMath.atan(D)D
FORCE java/lang/StrictMath.atan2(DD)D
FORCE java/lang/StrictMath.cbrt(D)D
FORCE java/lang/StrictMath.ceil(D)D
FORCE java/lang/StrictMath.copySign(DD)D
FORCE java/lang/StrictMath.copySign(FF)F
FORCE java/lang/StrictMath.cos(D)D
FORCE java/lang/StrictMath.cosh(D)D
FORCE java/lang/StrictMath.exp(D)D
FORCE java/lang/StrictMath.expm1(D)D
FORCE java/lang/StrictMath.floor(D)D
FORCE java/lang/StrictMath.floorDiv(II)I
FORCE java/lang/StrictMath.floorDiv(JJ)J
FORCE java/lang/StrictMath.floorMod(II)I
FORCE java/lang/StrictMath.floorMod(JJ)J
FORCE java/lang/StrictMath.floorOrCeil(DDDD)D
FORCE java/lang/StrictMath.getExponent(D)I
FORCE java/lang/StrictMath.getExponent(F)I
FORCE java/lang/StrictMath.hypot(DD)D
FORCE java/lang/StrictMath.log(D)D
FORCE java/lang/StrictMath.log10(D)D
FORCE java/lang/StrictMath.log1p(D)D
FORCE java/lang/StrictMath.max(DD)D
FORCE java/lang/StrictMath.max(FF)F
FORCE java/lang/StrictMath.max(II)I
FORCE java/lang/StrictMath.max(JJ)J
FORCE java/lang/StrictMath.min(DD)D
FORCE java/lang/StrictMath.min(FF)F
FORCE java/lang/StrictMath.min(II)I
FORCE java/lang/StrictMath.min(JJ)J
FORCE java/lang/StrictMath.multiplyExact(II)I
FORCE java/lang/StrictMath.multiplyExact(JJ)J
FORCE java/lang/StrictMath.nextAfter(DD)D
FORCE java/lang/StrictMath.nextAfter(FD)F
FORCE java/lang/StrictMath.nextDown(D)D
FORCE java/lang/StrictMath.nextDown(F)F
FORCE java/lang/StrictMath.nextUp(D)D
FORCE java/lang/StrictMath.nextUp(F)F
FORCE java/lang/StrictMath.pow(DD)D
FORCE java/lang/StrictMath.rint(D)D
FORCE java/lang/StrictMath.round(D)J
FORCE java/lang/StrictMath.round(F)I
FORCE java/lang/StrictMath.scalb(DI)D
FORCE java/lang/StrictMath.scalb(FI)F
FORCE java/lang/StrictMath.signum(D)D
FORCE java/lang/StrictMath.signum(F)F
FORCE java/lang/StrictMath.sin(D)D
FORCE java/lang/StrictMath.sinh(D)D
FORCE java/lang/StrictMath.sqrt(D)D
FORCE java/lang/StrictMath.subtractExact(II)I
FORCE java/lang/StrictMath.subtractExact(JJ)J
FORCE java/lang/StrictMath.tan(D)D
FORCE java/lang/StrictMath.tanh(D)D
FORCE java/lang/StrictMath.toDegrees(D)D
FORCE java/lang/StrictMath.toIntExact(J)I
FORCE java/lang/StrictMath.toRadians(D)D
FORCE java/lang/StrictMath.ulp(D)D
FORCE java/lang/StrictMath.ulp(F)F
FORCE java/lang/String.<init>()V
FORCE java/lang/String.<init>(Ljava/lang/String;)V
FORCE java/lang/String.<init>([B)V
FORCE java/lang/String.<init>([BI)V
FORCE java/lang/String.<init>([BIII)V
FORCE java/lang/String.<init>([BLjava/lang/String;)V
FORCE java/lang/String.<init>([BLjava/nio/charset/Charset;)V
FORCE java/lang/String.<init>([CZ)V
FORCE java/lang/String.<init>([III)V
FORCE java/lang/String.charAt(I)C
FORCE java/lang/String.checkBounds([BII)V
FORCE java/lang/String.codePointAt(I)I
FORCE java/lang/String.codePointBefore(I)I
FORCE java/lang/String.codePointCount(II)I
FORCE java/lang/String.compareTo(Ljava/lang/Object;)I
FORCE java/lang/String.compareTo(Ljava/lang/String;)I
FORCE java/lang/String.contains(Ljava/lang/CharSequence;)Z
FORCE java/lang/String.contentEquals(Ljava/lang/CharSequence;)Z
FORCE java/lang/String.contentEquals(Ljava/lang/StringBuffer;)Z
FORCE java/lang/String.copyValueOf([C)Ljava/lang/String;
FORCE java/lang/String.copyValueOf([CII)Ljava/lang/String;
FORCE java/lang/String.endsWith(Ljava/lang/String;)Z
FORCE java/lang/String.equals(Ljava/lang/Object;)Z
FORCE java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z
FORCE java/lang/String.getBytes(II[BI)V
FORCE java/lang/String.hashCode()I
FORCE java/lang/String.indexOf(I)I
FORCE java/lang/String.indexOf(II)I
FORCE java/lang/String.indexOf(Ljava/lang/String;)I
FORCE java/lang/String.indexOf(Ljava/lang/String;I)I
FORCE java/lang/String.indexOf([CIILjava/lang/String;I)I
FORCE java/lang/String.indexOf([CII[CIII)I
FORCE java/lang/String.indexOfSupplementary(II)I
FORCE java/lang/String.intern()Ljava/lang/String;
FORCE java/lang/String.isEmpty()Z
FORCE java/lang/String.lastIndexOf(I)I
FORCE java/lang/String.lastIndexOf(II)I
FORCE java/lang/String.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/String.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/String.lastIndexOf([CIILjava/lang/String;I)I
FORCE java/lang/String.lastIndexOf([CII[CIII)I
FORCE java/lang/String.lastIndexOfSupplementary(II)I
FORCE java/lang/String.length()I
FORCE java/lang/String.nonSyncContentEquals(Ljava/lang/AbstractStringBuilder;)Z
FORCE java/lang/String.offsetByCodePoints(II)I
FORCE java/lang/String.regionMatches(ILjava/lang/String;II)Z
FORCE java/lang/String.regionMatches(ZILjava/lang/String;II)Z
FORCE java/lang/String.replace(CC)Ljava/lang/String;
FORCE java/lang/String.split(Ljava/lang/String;)[Ljava/lang/String;
FORCE java/lang/String.startsWith(Ljava/lang/String;)Z
FORCE java/lang/String.startsWith(Ljava/lang/String;I)Z
FORCE java/lang/String.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/String.substring(I)Ljava/lang/String;
FORCE java/lang/String.substring(II)Ljava/lang/String;
FORCE java/lang/String.toString()Ljava/lang/String;
FORCE java/lang/String.trim()Ljava/lang/String;
FORCE java/lang/String.valueOf(C)Ljava/lang/String;
FORCE java/lang/String.valueOf(D)Ljava/lang/String;
FORCE java/lang/String.valueOf(F)Ljava/lang/String;
FORCE java/lang/String.valueOf(I)Ljava/lang/String;
FORCE java/lang/String.valueOf(J)Ljava/lang/String;
FORCE java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/lang/String.valueOf(Z)Ljava/lang/String;
FORCE java/lang/String.valueOf([C)Ljava/lang/String;
FORCE java/lang/String.valueOf([CII)Ljava/lang/String;
FORCE java/lang/StringBuffer.<init>()V
FORCE java/lang/StringBuffer.<init>(I)V
FORCE java/lang/StringBuffer.<init>(Ljava/lang/CharSequence;)V
FORCE java/lang/StringBuffer.<init>(Ljava/lang/String;)V
FORCE java/lang/StringBuffer.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(C)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(D)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(D)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(F)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(F)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(J)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Z)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append([C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append([C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append([CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append([CII)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.appendCodePoint(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.capacity()I
FORCE java/lang/StringBuffer.charAt(I)C
FORCE java/lang/StringBuffer.codePointAt(I)I
FORCE java/lang/StringBuffer.codePointBefore(I)I
FORCE java/lang/StringBuffer.codePointCount(II)I
FORCE java/lang/StringBuffer.delete(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.delete(II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.deleteCharAt(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.ensureCapacity(I)V
FORCE java/lang/StringBuffer.getChars(II[CI)V
FORCE java/lang/StringBuffer.indexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuffer.indexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuffer.insert(IC)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IC)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ID)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IF)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IJ)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/Object;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IZ)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(I[C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(I[C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(I[CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(I[CII)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuffer.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuffer.length()I
FORCE java/lang/StringBuffer.offsetByCodePoints(II)I
FORCE java/lang/StringBuffer.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.replace(IILjava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.reverse()Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.setCharAt(IC)V
FORCE java/lang/StringBuffer.setLength(I)V
FORCE java/lang/StringBuffer.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/StringBuffer.substring(I)Ljava/lang/String;
FORCE java/lang/StringBuffer.substring(II)Ljava/lang/String;
FORCE java/lang/StringBuffer.trimToSize()V
FORCE java/lang/StringBuilder.<init>()V
FORCE java/lang/StringBuilder.<init>(I)V
FORCE java/lang/StringBuilder.<init>(Ljava/lang/CharSequence;)V
FORCE java/lang/StringBuilder.<init>(Ljava/lang/String;)V
FORCE java/lang/StringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(C)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(D)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(D)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(F)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(F)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(J)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Z)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append([C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append([C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append([CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append([CII)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.capacity()I
FORCE java/lang/StringBuilder.charAt(I)C
FORCE java/lang/StringBuilder.codePointAt(I)I
FORCE java/lang/StringBuilder.codePointBefore(I)I
FORCE java/lang/StringBuilder.codePointCount(II)I
FORCE java/lang/StringBuilder.delete(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.delete(II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.ensureCapacity(I)V
FORCE java/lang/StringBuilder.getChars(II[CI)V
FORCE java/lang/StringBuilder.indexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuilder.indexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuilder.insert(IC)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IC)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ID)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IF)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IJ)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IZ)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(I[C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(I[C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(I[CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuilder.length()I
FORCE java/lang/StringBuilder.offsetByCodePoints(II)I
FORCE java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.reverse()Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.setCharAt(IC)V
FORCE java/lang/StringBuilder.setLength(I)V
FORCE java/lang/StringBuilder.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/StringBuilder.substring(I)Ljava/lang/String;
FORCE java/lang/StringBuilder.substring(II)Ljava/lang/String;
FORCE java/lang/StringBuilder.toString()Ljava/lang/String;
FORCE java/lang/StringBuilder.trimToSize()V
FORCE java/lang/Void.<init>()V
FORCE java/util/AbstractCollection.<init>()V
FORCE java/util/AbstractCollection.add(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.addAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.clear()V
FORCE java/util/AbstractCollection.contains(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.containsAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.hugeCapacity(I)I
FORCE java/util/AbstractCollection.isEmpty()Z
FORCE java/util/AbstractCollection.iterator()Ljava/util/Iterator;
FORCE java/util/AbstractCollection.remove(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.removeAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.retainAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.size()I
FORCE java/util/AbstractCollection.toString()Ljava/lang/String;
FORCE java/util/AbstractMap$SimpleEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE java/util/AbstractMap$SimpleEntry.<init>(Ljava/util/Map$Entry;)V
FORCE java/util/AbstractMap$SimpleEntry.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap$SimpleEntry.getKey()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.getValue()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.toString()Ljava/lang/String;
FORCE java/util/AbstractMap$SimpleImmutableEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE java/util/AbstractMap$SimpleImmutableEntry.<init>(Ljava/util/Map$Entry;)V
FORCE java/util/AbstractMap$SimpleImmutableEntry.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap$SimpleImmutableEntry.getKey()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.getValue()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.toString()Ljava/lang/String;
FORCE java/util/AbstractMap.<init>()V
FORCE java/util/AbstractMap.access$000(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.clear()V
FORCE java/util/AbstractMap.clone()Ljava/lang/Object;
FORCE java/util/AbstractMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.entrySet()Ljava/util/Set;
FORCE java/util/AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.hashCode()I
FORCE java/util/AbstractMap.isEmpty()Z
FORCE java/util/AbstractMap.keySet()Ljava/util/Set;
FORCE java/util/AbstractMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.putAll(Ljava/util/Map;)V
FORCE java/util/AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.size()I
FORCE java/util/AbstractMap.toString()Ljava/lang/String;
FORCE java/util/AbstractMap.values()Ljava/util/Collection;
FORCE java/util/AbstractSet.<init>()V
FORCE java/util/AbstractSet.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractSet.removeAll(Ljava/util/Collection;)Z
FORCE java/util/HashMap.<init>()V
FORCE java/util/HashMap.<init>(I)V
FORCE java/util/HashMap.<init>(IF)V
FORCE java/util/HashMap.<init>(Ljava/util/Map;)V
FORCE java/util/HashMap.afterNodeAccess(Ljava/util/HashMap$Node;)V
FORCE java/util/HashMap.afterNodeInsertion(Z)V
FORCE java/util/HashMap.afterNodeRemoval(Ljava/util/HashMap$Node;)V
FORCE java/util/HashMap.capacity()I
FORCE java/util/HashMap.clear()V
FORCE java/util/HashMap.clone()Ljava/lang/Object;
FORCE java/util/HashMap.comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;
FORCE java/util/HashMap.compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I
FORCE java/util/HashMap.computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
FORCE java/util/HashMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/HashMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/HashMap.forEach(Ljava/util/function/BiConsumer;)V
FORCE java/util/HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.isEmpty()Z
FORCE java/util/HashMap.loadFactor()F
FORCE java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.putAll(Ljava/util/Map;)V
FORCE java/util/HashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.putMapEntries(Ljava/util/Map;Z)V
FORCE java/util/HashMap.reinitialize()V
FORCE java/util/HashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.remove(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/HashMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/HashMap.replaceAll(Ljava/util/function/BiFunction;)V
FORCE java/util/HashMap.size()I
FORCE java/util/HashMap.tableSizeFor(I)I
FORCE java/util/HashSet.<init>()V
FORCE java/util/HashSet.<init>(I)V
FORCE java/util/HashSet.<init>(IF)V
FORCE java/util/HashSet.<init>(Ljava/util/Collection;)V
FORCE java/util/HashSet.add(Ljava/lang/Object;)Z
FORCE java/util/HashSet.clear()V
FORCE java/util/HashSet.clone()Ljava/lang/Object;
FORCE java/util/HashSet.contains(Ljava/lang/Object;)Z
FORCE java/util/HashSet.isEmpty()Z
FORCE java/util/HashSet.iterator()Ljava/util/Iterator;
FORCE java/util/HashSet.remove(Ljava/lang/Object;)Z
FORCE java/util/HashSet.size()I
FORCE java/util/Objects.<init>()V
FORCE java/util/Objects.compare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Objects.isNull(Ljava/lang/Object;)Z
FORCE java/util/Objects.nonNull(Ljava/lang/Object;)Z
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
FORCE java/util/Objects.toString(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/util/Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
