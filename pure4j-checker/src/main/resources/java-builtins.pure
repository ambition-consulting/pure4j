FORCE java/io/BufferedInputStream.<init>(Ljava/io/InputStream;I)V
FORCE java/io/BufferedInputStream.available()I
FORCE java/io/BufferedInputStream.getBufIfOpen()[B
FORCE java/io/BufferedInputStream.getInIfOpen()Ljava/io/InputStream;
FORCE java/io/BufferedInputStream.mark(I)V
FORCE java/io/BufferedInputStream.markSupported()Z
FORCE java/io/BufferedInputStream.read()I
FORCE java/io/BufferedInputStream.read([BII)I
FORCE java/io/BufferedInputStream.read1([BII)I
FORCE java/io/BufferedInputStream.reset()V
FORCE java/io/BufferedInputStream.skip(J)J
FORCE java/io/BufferedOutputStream.<init>(Ljava/io/OutputStream;)V
FORCE java/io/BufferedOutputStream.<init>(Ljava/io/OutputStream;I)V
FORCE java/io/BufferedOutputStream.flush()V
FORCE java/io/BufferedOutputStream.flushBuffer()V
FORCE java/io/BufferedOutputStream.write(I)V
FORCE java/io/BufferedOutputStream.write([BII)V
FORCE java/io/CharArrayReader.<init>([C)V
FORCE java/io/CharArrayReader.<init>([CII)V
FORCE java/io/CharArrayReader.close()V
FORCE java/io/CharArrayReader.ensureOpen()V
FORCE java/io/CharArrayReader.mark(I)V
FORCE java/io/CharArrayReader.markSupported()Z
FORCE java/io/CharArrayReader.read()I
FORCE java/io/CharArrayReader.read([CII)I
FORCE java/io/CharArrayReader.ready()Z
FORCE java/io/CharArrayReader.reset()V
FORCE java/io/CharArrayReader.skip(J)J
FORCE java/io/CharArrayWriter.<init>()V
FORCE java/io/CharArrayWriter.<init>(I)V
FORCE java/io/CharArrayWriter.append(C)Ljava/io/CharArrayWriter;
FORCE java/io/CharArrayWriter.append(C)Ljava/io/Writer;
FORCE java/io/CharArrayWriter.append(C)Ljava/lang/Appendable;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
FORCE java/io/CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/io/CharArrayWriter.close()V
FORCE java/io/CharArrayWriter.flush()V
FORCE java/io/CharArrayWriter.reset()V
FORCE java/io/CharArrayWriter.size()I
FORCE java/io/CharArrayWriter.toCharArray()[C
FORCE java/io/CharArrayWriter.toString()Ljava/lang/String;
FORCE java/io/CharArrayWriter.write(I)V
FORCE java/io/CharArrayWriter.write(Ljava/lang/String;II)V
FORCE java/io/CharArrayWriter.write([CII)V
FORCE java/io/CharArrayWriter.writeTo(Ljava/io/Writer;)V
FORCE java/io/FilterInputStream.<init>(Ljava/io/InputStream;)V
FORCE java/io/FilterInputStream.available()I
FORCE java/io/FilterInputStream.close()V
FORCE java/io/FilterInputStream.mark(I)V
FORCE java/io/FilterInputStream.markSupported()Z
FORCE java/io/FilterInputStream.read()I
FORCE java/io/FilterInputStream.read([B)I
FORCE java/io/FilterInputStream.read([BII)I
FORCE java/io/FilterInputStream.reset()V
FORCE java/io/FilterInputStream.skip(J)J
FORCE java/io/FilterOutputStream.<init>(Ljava/io/OutputStream;)V
FORCE java/io/FilterOutputStream.close()V
FORCE java/io/FilterOutputStream.flush()V
FORCE java/io/FilterOutputStream.write(I)V
FORCE java/io/FilterOutputStream.write([B)V
FORCE java/io/FilterOutputStream.write([BII)V
FORCE java/io/InputStream.<init>()V
FORCE java/io/InputStream.available()I
FORCE java/io/InputStream.close()V
FORCE java/io/InputStream.mark(I)V
FORCE java/io/InputStream.markSupported()Z
FORCE java/io/InputStream.read()I
FORCE java/io/InputStream.read([B)I
FORCE java/io/InputStream.read([BII)I
FORCE java/io/InputStream.reset()V
FORCE java/io/InputStream.skip(J)J
FORCE java/io/OutputStream.<init>()V
FORCE java/io/OutputStream.close()V
FORCE java/io/OutputStream.flush()V
FORCE java/io/OutputStream.write(I)V
FORCE java/io/OutputStream.write([B)V
FORCE java/io/OutputStream.write([BII)V
FORCE java/io/PrintStream.<init>(Ljava/io/OutputStream;)V
FORCE java/io/PrintStream.<init>(Ljava/io/OutputStream;Z)V
FORCE java/io/PrintStream.<init>(Ljava/io/OutputStream;ZLjava/lang/String;)V
FORCE java/io/PrintStream.<init>(ZLjava/nio/charset/Charset;Ljava/io/OutputStream;)V
FORCE java/io/PrintStream.append(C)Ljava/io/PrintStream;
FORCE java/io/PrintStream.append(C)Ljava/lang/Appendable;
FORCE java/io/PrintStream.append(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
FORCE java/io/PrintStream.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/io/PrintStream.append(Ljava/lang/CharSequence;II)Ljava/io/PrintStream;
FORCE java/io/PrintStream.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/io/PrintStream.checkError()Z
FORCE java/io/PrintStream.clearError()V
FORCE java/io/PrintStream.ensureOpen()V
FORCE java/io/PrintStream.flush()V
FORCE java/io/PrintStream.print(C)V
FORCE java/io/PrintStream.print(D)V
FORCE java/io/PrintStream.print(F)V
FORCE java/io/PrintStream.print(I)V
FORCE java/io/PrintStream.print(J)V
FORCE java/io/PrintStream.print(Ljava/lang/Object;)V
FORCE java/io/PrintStream.print(Ljava/lang/String;)V
FORCE java/io/PrintStream.print(Z)V
FORCE java/io/PrintStream.print([C)V
FORCE java/io/PrintStream.printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
FORCE java/io/PrintStream.printf(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
FORCE java/io/PrintStream.println()V
FORCE java/io/PrintStream.println(C)V
FORCE java/io/PrintStream.println(D)V
FORCE java/io/PrintStream.println(F)V
FORCE java/io/PrintStream.println(I)V
FORCE java/io/PrintStream.println(J)V
FORCE java/io/PrintStream.println(Ljava/lang/Object;)V
FORCE java/io/PrintStream.println(Ljava/lang/String;)V
FORCE java/io/PrintStream.println(Z)V
FORCE java/io/PrintStream.println([C)V
FORCE java/io/PrintStream.requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
FORCE java/io/PrintStream.setError()V
FORCE java/io/PrintWriter.<init>(Ljava/io/File;Ljava/lang/String;)V
FORCE java/io/PrintWriter.<init>(Ljava/io/OutputStream;)V
FORCE java/io/PrintWriter.<init>(Ljava/io/Writer;)V
FORCE java/io/PrintWriter.append(C)Ljava/io/PrintWriter;
FORCE java/io/PrintWriter.append(C)Ljava/io/Writer;
FORCE java/io/PrintWriter.append(C)Ljava/lang/Appendable;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
FORCE java/io/PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/io/PrintWriter.checkError()Z
FORCE java/io/PrintWriter.clearError()V
FORCE java/io/PrintWriter.close()V
FORCE java/io/PrintWriter.ensureOpen()V
FORCE java/io/PrintWriter.flush()V
FORCE java/io/PrintWriter.print(C)V
FORCE java/io/PrintWriter.print(D)V
FORCE java/io/PrintWriter.print(F)V
FORCE java/io/PrintWriter.print(I)V
FORCE java/io/PrintWriter.print(J)V
FORCE java/io/PrintWriter.print(Ljava/lang/Object;)V
FORCE java/io/PrintWriter.print(Ljava/lang/String;)V
FORCE java/io/PrintWriter.print(Z)V
FORCE java/io/PrintWriter.print([C)V
FORCE java/io/PrintWriter.printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;
FORCE java/io/PrintWriter.printf(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;
FORCE java/io/PrintWriter.println()V
FORCE java/io/PrintWriter.println(C)V
FORCE java/io/PrintWriter.println(D)V
FORCE java/io/PrintWriter.println(F)V
FORCE java/io/PrintWriter.println(I)V
FORCE java/io/PrintWriter.println(J)V
FORCE java/io/PrintWriter.println(Ljava/lang/Object;)V
FORCE java/io/PrintWriter.println(Ljava/lang/String;)V
FORCE java/io/PrintWriter.println(Z)V
FORCE java/io/PrintWriter.println([C)V
FORCE java/io/PrintWriter.setError()V
FORCE java/io/PrintWriter.write(Ljava/lang/String;)V
FORCE java/io/PrintWriter.write([C)V
FORCE java/io/Reader.<init>()V
FORCE java/io/Reader.<init>(Ljava/lang/Object;)V
FORCE java/io/Reader.close()V
FORCE java/io/Reader.mark(I)V
FORCE java/io/Reader.markSupported()Z
FORCE java/io/Reader.read()I
FORCE java/io/Reader.read([C)I
FORCE java/io/Reader.read([CII)I
FORCE java/io/Reader.ready()Z
FORCE java/io/Reader.reset()V
FORCE java/io/Reader.skip(J)J
FORCE java/io/StringReader.<init>(Ljava/lang/String;)V
FORCE java/io/StringReader.close()V
FORCE java/io/StringReader.ensureOpen()V
FORCE java/io/StringReader.mark(I)V
FORCE java/io/StringReader.markSupported()Z
FORCE java/io/StringReader.read()I
FORCE java/io/StringReader.read([CII)I
FORCE java/io/StringReader.ready()Z
FORCE java/io/StringReader.reset()V
FORCE java/io/StringReader.skip(J)J
FORCE java/io/StringWriter.<init>()V
FORCE java/io/StringWriter.<init>(I)V
FORCE java/io/StringWriter.append(C)Ljava/io/StringWriter;
FORCE java/io/StringWriter.append(C)Ljava/io/Writer;
FORCE java/io/StringWriter.append(C)Ljava/lang/Appendable;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
FORCE java/io/StringWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/io/StringWriter.close()V
FORCE java/io/StringWriter.flush()V
FORCE java/io/StringWriter.getBuffer()Ljava/lang/StringBuffer;
FORCE java/io/StringWriter.toString()Ljava/lang/String;
FORCE java/io/StringWriter.write(I)V
FORCE java/io/StringWriter.write(Ljava/lang/String;)V
FORCE java/io/StringWriter.write(Ljava/lang/String;II)V
FORCE java/io/StringWriter.write([CII)V
FORCE java/io/Writer.<init>()V
FORCE java/io/Writer.<init>(Ljava/lang/Object;)V
FORCE java/io/Writer.append(C)Ljava/io/Writer;
FORCE java/io/Writer.append(C)Ljava/lang/Appendable;
FORCE java/io/Writer.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
FORCE java/io/Writer.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/io/Writer.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
FORCE java/io/Writer.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/io/Writer.close()V
FORCE java/io/Writer.flush()V
FORCE java/io/Writer.write(I)V
FORCE java/io/Writer.write(Ljava/lang/String;)V
FORCE java/io/Writer.write(Ljava/lang/String;II)V
FORCE java/io/Writer.write([C)V
FORCE java/io/Writer.write([CII)V
FORCE java/lang/AbstractStringBuilder.<init>()V
FORCE java/lang/AbstractStringBuilder.<init>(I)V
FORCE java/lang/AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(C)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append([C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.append([CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.appendNull()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.capacity()I
FORCE java/lang/AbstractStringBuilder.charAt(I)C
FORCE java/lang/AbstractStringBuilder.codePointAt(I)I
FORCE java/lang/AbstractStringBuilder.codePointBefore(I)I
FORCE java/lang/AbstractStringBuilder.codePointCount(II)I
FORCE java/lang/AbstractStringBuilder.delete(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.ensureCapacity(I)V
FORCE java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V
FORCE java/lang/AbstractStringBuilder.expandCapacity(I)V
FORCE java/lang/AbstractStringBuilder.getChars(II[CI)V
FORCE java/lang/AbstractStringBuilder.getValue()[C
FORCE java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;)I
FORCE java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;I)I
FORCE java/lang/AbstractStringBuilder.insert(IC)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(I[C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.insert(I[CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/AbstractStringBuilder.length()I
FORCE java/lang/AbstractStringBuilder.offsetByCodePoints(II)I
FORCE java/lang/AbstractStringBuilder.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/AbstractStringBuilder.reverseAllValidSurrogatePairs()V
FORCE java/lang/AbstractStringBuilder.setCharAt(IC)V
FORCE java/lang/AbstractStringBuilder.setLength(I)V
FORCE java/lang/AbstractStringBuilder.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/AbstractStringBuilder.substring(I)Ljava/lang/String;
FORCE java/lang/AbstractStringBuilder.substring(II)Ljava/lang/String;
FORCE java/lang/AbstractStringBuilder.toString()Ljava/lang/String;
FORCE java/lang/AbstractStringBuilder.trimToSize()V
FORCE java/lang/Boolean.<init>(Ljava/lang/String;)V
FORCE java/lang/Boolean.<init>(Z)V
FORCE java/lang/Boolean.booleanValue()Z
FORCE java/lang/Boolean.compare(ZZ)I
FORCE java/lang/Boolean.compareTo(Ljava/lang/Boolean;)I
FORCE java/lang/Boolean.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Boolean.equals(Ljava/lang/Object;)Z
FORCE java/lang/Boolean.hashCode()I
FORCE java/lang/Boolean.hashCode(Z)I
FORCE java/lang/Boolean.logicalAnd(ZZ)Z
FORCE java/lang/Boolean.logicalOr(ZZ)Z
FORCE java/lang/Boolean.logicalXor(ZZ)Z
FORCE java/lang/Boolean.parseBoolean(Ljava/lang/String;)Z
FORCE java/lang/Boolean.toString()Ljava/lang/String;
FORCE java/lang/Boolean.toString(Z)Ljava/lang/String;
FORCE java/lang/Boolean.valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
FORCE java/lang/Boolean.valueOf(Z)Ljava/lang/Boolean;
FORCE java/lang/Character$Subset.<init>(Ljava/lang/String;)V
FORCE java/lang/Character$Subset.equals(Ljava/lang/Object;)Z
FORCE java/lang/Character$Subset.toString()Ljava/lang/String;
FORCE java/lang/Character$UnicodeBlock.of(C)Ljava/lang/Character$UnicodeBlock;
FORCE java/lang/Character$UnicodeBlock.of(I)Ljava/lang/Character$UnicodeBlock;
FORCE java/lang/Character$UnicodeScript.<init>(Ljava/lang/String;I)V
FORCE java/lang/Character$UnicodeScript.of(I)Ljava/lang/Character$UnicodeScript;
FORCE java/lang/Character$UnicodeScript.valueOf(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;
FORCE java/lang/Character$UnicodeScript.values()[Ljava/lang/Character$UnicodeScript;
FORCE java/lang/Character.<init>(C)V
FORCE java/lang/Character.charCount(I)I
FORCE java/lang/Character.charValue()C
FORCE java/lang/Character.codePointAt(Ljava/lang/CharSequence;I)I
FORCE java/lang/Character.codePointAt([CI)I
FORCE java/lang/Character.codePointAt([CII)I
FORCE java/lang/Character.codePointAtImpl([CII)I
FORCE java/lang/Character.codePointBefore(Ljava/lang/CharSequence;I)I
FORCE java/lang/Character.codePointBefore([CI)I
FORCE java/lang/Character.codePointBefore([CII)I
FORCE java/lang/Character.codePointBeforeImpl([CII)I
FORCE java/lang/Character.codePointCount(Ljava/lang/CharSequence;II)I
FORCE java/lang/Character.codePointCount([CII)I
FORCE java/lang/Character.codePointCountImpl([CII)I
FORCE java/lang/Character.compare(CC)I
FORCE java/lang/Character.compareTo(Ljava/lang/Character;)I
FORCE java/lang/Character.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Character.digit(CI)I
FORCE java/lang/Character.equals(Ljava/lang/Object;)Z
FORCE java/lang/Character.forDigit(II)C
FORCE java/lang/Character.getDirectionality(C)B
FORCE java/lang/Character.getNumericValue(C)I
FORCE java/lang/Character.getType(C)I
FORCE java/lang/Character.hashCode()I
FORCE java/lang/Character.hashCode(C)I
FORCE java/lang/Character.highSurrogate(I)C
FORCE java/lang/Character.isBmpCodePoint(I)Z
FORCE java/lang/Character.isDefined(C)Z
FORCE java/lang/Character.isDefined(I)Z
FORCE java/lang/Character.isDigit(C)Z
FORCE java/lang/Character.isDigit(I)Z
FORCE java/lang/Character.isHighSurrogate(C)Z
FORCE java/lang/Character.isISOControl(C)Z
FORCE java/lang/Character.isISOControl(I)Z
FORCE java/lang/Character.isIdentifierIgnorable(C)Z
FORCE java/lang/Character.isJavaIdentifierPart(C)Z
FORCE java/lang/Character.isJavaIdentifierStart(C)Z
FORCE java/lang/Character.isJavaLetter(C)Z
FORCE java/lang/Character.isJavaLetterOrDigit(C)Z
FORCE java/lang/Character.isLetter(C)Z
FORCE java/lang/Character.isLetter(I)Z
FORCE java/lang/Character.isLetterOrDigit(C)Z
FORCE java/lang/Character.isLetterOrDigit(I)Z
FORCE java/lang/Character.isLowSurrogate(C)Z
FORCE java/lang/Character.isLowerCase(C)Z
FORCE java/lang/Character.isMirrored(C)Z
FORCE java/lang/Character.isSpace(C)Z
FORCE java/lang/Character.isSpaceChar(C)Z
FORCE java/lang/Character.isSpaceChar(I)Z
FORCE java/lang/Character.isSupplementaryCodePoint(I)Z
FORCE java/lang/Character.isSurrogate(C)Z
FORCE java/lang/Character.isSurrogatePair(CC)Z
FORCE java/lang/Character.isTitleCase(C)Z
FORCE java/lang/Character.isTitleCase(I)Z
FORCE java/lang/Character.isUnicodeIdentifierPart(C)Z
FORCE java/lang/Character.isUnicodeIdentifierStart(C)Z
FORCE java/lang/Character.isUpperCase(C)Z
FORCE java/lang/Character.isValidCodePoint(I)Z
FORCE java/lang/Character.isWhitespace(C)Z
FORCE java/lang/Character.lowSurrogate(I)C
FORCE java/lang/Character.offsetByCodePoints(Ljava/lang/CharSequence;II)I
FORCE java/lang/Character.offsetByCodePoints([CIIII)I
FORCE java/lang/Character.offsetByCodePointsImpl([CIIII)I
FORCE java/lang/Character.reverseBytes(C)C
FORCE java/lang/Character.toChars(I)[C
FORCE java/lang/Character.toChars(I[CI)I
FORCE java/lang/Character.toCodePoint(CC)I
FORCE java/lang/Character.toLowerCase(C)C
FORCE java/lang/Character.toString()Ljava/lang/String;
FORCE java/lang/Character.toString(C)Ljava/lang/String;
FORCE java/lang/Character.toSurrogates(I[CI)V
FORCE java/lang/Character.toTitleCase(C)C
FORCE java/lang/Character.toUpperCase(C)C
FORCE java/lang/Character.valueOf(C)Ljava/lang/Character;
FORCE java/lang/Class.access$100(Ljava/lang/Class;Z)[Ljava/lang/reflect/Field;
FORCE java/lang/Class.access$200([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;
FORCE java/lang/Class.access$300([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/lang/Class.access$402(Z)Z
FORCE java/lang/Class.access$502(Z)Z
FORCE java/lang/Class.addAll(Ljava/util/Collection;[Ljava/lang/reflect/Field;)V
FORCE java/lang/Class.argumentTypesToString([Ljava/lang/Class;)Ljava/lang/String;
FORCE java/lang/Class.arrayContentsEq([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/lang/Class.asSubclass(Ljava/lang/Class;)Ljava/lang/Class;
FORCE java/lang/Class.cannotCastMsg(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/lang/Class.cast(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/lang/Class.desiredAssertionStatus()Z
FORCE java/lang/Class.desiredAssertionStatus0(Ljava/lang/Class;)Z
FORCE java/lang/Class.enumConstantDirectory()Ljava/util/Map;
FORCE java/lang/Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;
FORCE java/lang/Class.getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
FORCE java/lang/Class.getAnnotationType()Lsun/reflect/annotation/AnnotationType;
FORCE java/lang/Class.getCanonicalName()Ljava/lang/String;
FORCE java/lang/Class.getComponentType()Ljava/lang/Class;
FORCE java/lang/Class.getConstantPool()Lsun/reflect/ConstantPool;
FORCE java/lang/Class.getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
FORCE java/lang/Class.getDeclaredAnnotationMap()Ljava/util/Map;
FORCE java/lang/Class.getDeclaredClasses0()[Ljava/lang/Class;
FORCE java/lang/Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;
FORCE java/lang/Class.getDeclaredFields0(Z)[Ljava/lang/reflect/Field;
FORCE java/lang/Class.getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;
FORCE java/lang/Class.getDeclaringClass0()Ljava/lang/Class;
FORCE java/lang/Class.getEnclosingMethod0()[Ljava/lang/Object;
FORCE java/lang/Class.getEnumConstants()[Ljava/lang/Object;
FORCE java/lang/Class.getField0(Ljava/lang/String;)Ljava/lang/reflect/Field;
FORCE java/lang/Class.getGenericSignature0()Ljava/lang/String;
FORCE java/lang/Class.getInterfaces()[Ljava/lang/Class;
FORCE java/lang/Class.getInterfaces0()[Ljava/lang/Class;
FORCE java/lang/Class.getModifiers()I
FORCE java/lang/Class.getName()Ljava/lang/String;
FORCE java/lang/Class.getName0()Ljava/lang/String;
FORCE java/lang/Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;
FORCE java/lang/Class.getProtectionDomain0()Ljava/security/ProtectionDomain;
FORCE java/lang/Class.getRawAnnotations()[B
FORCE java/lang/Class.getRawTypeAnnotations()[B
FORCE java/lang/Class.getSigners()[Ljava/lang/Object;
FORCE java/lang/Class.getSimpleBinaryName()Ljava/lang/String;
FORCE java/lang/Class.getSimpleName()Ljava/lang/String;
FORCE java/lang/Class.getSuperclass()Ljava/lang/Class;
FORCE java/lang/Class.getTypeName()Ljava/lang/String;
FORCE java/lang/Class.isAnnotation()Z
FORCE java/lang/Class.isAnnotationPresent(Ljava/lang/Class;)Z
FORCE java/lang/Class.isAnonymousClass()Z
FORCE java/lang/Class.isArray()Z
FORCE java/lang/Class.isAsciiDigit(C)Z
FORCE java/lang/Class.isAssignableFrom(Ljava/lang/Class;)Z
FORCE java/lang/Class.isEnum()Z
FORCE java/lang/Class.isInstance(Ljava/lang/Object;)Z
FORCE java/lang/Class.isInterface()Z
FORCE java/lang/Class.isLocalClass()Z
FORCE java/lang/Class.isLocalOrAnonymousClass()Z
FORCE java/lang/Class.isMemberClass()Z
FORCE java/lang/Class.isPrimitive()Z
FORCE java/lang/Class.isSynthetic()Z
FORCE java/lang/Class.privateGetDeclaredConstructors(Z)[Ljava/lang/reflect/Constructor;
FORCE java/lang/Class.privateGetPublicFields(Ljava/util/Set;)[Ljava/lang/reflect/Field;
FORCE java/lang/Class.registerNatives()V
FORCE java/lang/Class.resolveName(Ljava/lang/String;)Ljava/lang/String;
FORCE java/lang/Class.setSigners([Ljava/lang/Object;)V
FORCE java/lang/Class.toClass(Ljava/lang/reflect/Type;)Ljava/lang/Class;
FORCE java/lang/Class.toString()Ljava/lang/String;
FORCE java/lang/Double.<init>(D)V
FORCE java/lang/Double.<init>(Ljava/lang/String;)V
FORCE java/lang/Double.byteValue()B
FORCE java/lang/Double.compare(DD)I
FORCE java/lang/Double.compareTo(Ljava/lang/Double;)I
FORCE java/lang/Double.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Double.doubleToLongBits(D)J
FORCE java/lang/Double.doubleToRawLongBits(D)J
FORCE java/lang/Double.doubleValue()D
FORCE java/lang/Double.equals(Ljava/lang/Object;)Z
FORCE java/lang/Double.floatValue()F
FORCE java/lang/Double.hashCode()I
FORCE java/lang/Double.hashCode(D)I
FORCE java/lang/Double.intValue()I
FORCE java/lang/Double.isFinite(D)Z
FORCE java/lang/Double.isInfinite()Z
FORCE java/lang/Double.isInfinite(D)Z
FORCE java/lang/Double.isNaN()Z
FORCE java/lang/Double.isNaN(D)Z
FORCE java/lang/Double.longBitsToDouble(J)D
FORCE java/lang/Double.longValue()J
FORCE java/lang/Double.max(DD)D
FORCE java/lang/Double.min(DD)D
FORCE java/lang/Double.shortValue()S
FORCE java/lang/Double.sum(DD)D
FORCE java/lang/Double.toHexString(D)Ljava/lang/String;
FORCE java/lang/Double.toString()Ljava/lang/String;
FORCE java/lang/Double.valueOf(D)Ljava/lang/Double;
FORCE java/lang/Double.valueOf(Ljava/lang/String;)Ljava/lang/Double;
FORCE java/lang/Enum.<init>(Ljava/lang/String;I)V
FORCE java/lang/Enum.clone()Ljava/lang/Object;
FORCE java/lang/Enum.compareTo(Ljava/lang/Enum;)I
FORCE java/lang/Enum.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Enum.equals(Ljava/lang/Object;)Z
FORCE java/lang/Enum.finalize()V
FORCE java/lang/Enum.getDeclaringClass()Ljava/lang/Class;
FORCE java/lang/Enum.hashCode()I
FORCE java/lang/Enum.name()Ljava/lang/String;
FORCE java/lang/Enum.ordinal()I
FORCE java/lang/Enum.readObject(Ljava/io/ObjectInputStream;)V
FORCE java/lang/Enum.readObjectNoData()V
FORCE java/lang/Enum.toString()Ljava/lang/String;
FORCE java/lang/Enum.valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
FORCE java/lang/Float.<init>(D)V
FORCE java/lang/Float.<init>(F)V
FORCE java/lang/Float.<init>(Ljava/lang/String;)V
FORCE java/lang/Float.byteValue()B
FORCE java/lang/Float.compare(FF)I
FORCE java/lang/Float.compareTo(Ljava/lang/Float;)I
FORCE java/lang/Float.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Float.doubleValue()D
FORCE java/lang/Float.equals(Ljava/lang/Object;)Z
FORCE java/lang/Float.floatToIntBits(F)I
FORCE java/lang/Float.floatToRawIntBits(F)I
FORCE java/lang/Float.floatValue()F
FORCE java/lang/Float.hashCode()I
FORCE java/lang/Float.hashCode(F)I
FORCE java/lang/Float.intBitsToFloat(I)F
FORCE java/lang/Float.intValue()I
FORCE java/lang/Float.isFinite(F)Z
FORCE java/lang/Float.isInfinite()Z
FORCE java/lang/Float.isInfinite(F)Z
FORCE java/lang/Float.isNaN()Z
FORCE java/lang/Float.isNaN(F)Z
FORCE java/lang/Float.longValue()J
FORCE java/lang/Float.max(FF)F
FORCE java/lang/Float.min(FF)F
FORCE java/lang/Float.shortValue()S
FORCE java/lang/Float.sum(FF)F
FORCE java/lang/Float.toHexString(F)Ljava/lang/String;
FORCE java/lang/Float.toString()Ljava/lang/String;
FORCE java/lang/Float.valueOf(F)Ljava/lang/Float;
FORCE java/lang/Float.valueOf(Ljava/lang/String;)Ljava/lang/Float;
FORCE java/lang/Integer.<init>(I)V
FORCE java/lang/Integer.<init>(Ljava/lang/String;)V
FORCE java/lang/Integer.bitCount(I)I
FORCE java/lang/Integer.byteValue()B
FORCE java/lang/Integer.compare(II)I
FORCE java/lang/Integer.compareTo(Ljava/lang/Integer;)I
FORCE java/lang/Integer.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Integer.compareUnsigned(II)I
FORCE java/lang/Integer.decode(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.divideUnsigned(II)I
FORCE java/lang/Integer.doubleValue()D
FORCE java/lang/Integer.equals(Ljava/lang/Object;)Z
FORCE java/lang/Integer.floatValue()F
FORCE java/lang/Integer.getInteger(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.getInteger(Ljava/lang/String;I)Ljava/lang/Integer;
FORCE java/lang/Integer.hashCode()I
FORCE java/lang/Integer.hashCode(I)I
FORCE java/lang/Integer.highestOneBit(I)I
FORCE java/lang/Integer.intValue()I
FORCE java/lang/Integer.longValue()J
FORCE java/lang/Integer.lowestOneBit(I)I
FORCE java/lang/Integer.max(II)I
FORCE java/lang/Integer.min(II)I
FORCE java/lang/Integer.numberOfLeadingZeros(I)I
FORCE java/lang/Integer.numberOfTrailingZeros(I)I
FORCE java/lang/Integer.parseInt(Ljava/lang/String;)I
FORCE java/lang/Integer.parseUnsignedInt(Ljava/lang/String;)I
FORCE java/lang/Integer.remainderUnsigned(II)I
FORCE java/lang/Integer.reverse(I)I
FORCE java/lang/Integer.reverseBytes(I)I
FORCE java/lang/Integer.rotateLeft(II)I
FORCE java/lang/Integer.rotateRight(II)I
FORCE java/lang/Integer.shortValue()S
FORCE java/lang/Integer.signum(I)I
FORCE java/lang/Integer.sum(II)I
FORCE java/lang/Integer.toBinaryString(I)Ljava/lang/String;
FORCE java/lang/Integer.toHexString(I)Ljava/lang/String;
FORCE java/lang/Integer.toOctalString(I)Ljava/lang/String;
FORCE java/lang/Integer.toString()Ljava/lang/String;
FORCE java/lang/Integer.toString(I)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedLong(I)J
FORCE java/lang/Integer.toUnsignedString(I)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedString(II)Ljava/lang/String;
FORCE java/lang/Integer.toUnsignedString0(II)Ljava/lang/String;
FORCE java/lang/Integer.valueOf(I)Ljava/lang/Integer;
FORCE java/lang/Integer.valueOf(Ljava/lang/String;)Ljava/lang/Integer;
FORCE java/lang/Integer.valueOf(Ljava/lang/String;I)Ljava/lang/Integer;
FORCE java/lang/Long.<init>(J)V
FORCE java/lang/Long.<init>(Ljava/lang/String;)V
FORCE java/lang/Long.bitCount(J)I
FORCE java/lang/Long.byteValue()B
FORCE java/lang/Long.compare(JJ)I
FORCE java/lang/Long.compareTo(Ljava/lang/Long;)I
FORCE java/lang/Long.compareTo(Ljava/lang/Object;)I
FORCE java/lang/Long.compareUnsigned(JJ)I
FORCE java/lang/Long.decode(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.divideUnsigned(JJ)J
FORCE java/lang/Long.doubleValue()D
FORCE java/lang/Long.equals(Ljava/lang/Object;)Z
FORCE java/lang/Long.floatValue()F
FORCE java/lang/Long.getLong(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.getLong(Ljava/lang/String;J)Ljava/lang/Long;
FORCE java/lang/Long.hashCode()I
FORCE java/lang/Long.hashCode(J)I
FORCE java/lang/Long.highestOneBit(J)J
FORCE java/lang/Long.intValue()I
FORCE java/lang/Long.longValue()J
FORCE java/lang/Long.lowestOneBit(J)J
FORCE java/lang/Long.max(JJ)J
FORCE java/lang/Long.min(JJ)J
FORCE java/lang/Long.numberOfLeadingZeros(J)I
FORCE java/lang/Long.numberOfTrailingZeros(J)I
FORCE java/lang/Long.parseLong(Ljava/lang/String;)J
FORCE java/lang/Long.parseUnsignedLong(Ljava/lang/String;)J
FORCE java/lang/Long.remainderUnsigned(JJ)J
FORCE java/lang/Long.reverse(J)J
FORCE java/lang/Long.reverseBytes(J)J
FORCE java/lang/Long.rotateLeft(JI)J
FORCE java/lang/Long.rotateRight(JI)J
FORCE java/lang/Long.shortValue()S
FORCE java/lang/Long.signum(J)I
FORCE java/lang/Long.stringSize(J)I
FORCE java/lang/Long.sum(JJ)J
FORCE java/lang/Long.toBinaryString(J)Ljava/lang/String;
FORCE java/lang/Long.toHexString(J)Ljava/lang/String;
FORCE java/lang/Long.toOctalString(J)Ljava/lang/String;
FORCE java/lang/Long.toString()Ljava/lang/String;
FORCE java/lang/Long.toString(J)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString(J)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString(JI)Ljava/lang/String;
FORCE java/lang/Long.toUnsignedString0(JI)Ljava/lang/String;
FORCE java/lang/Long.valueOf(J)Ljava/lang/Long;
FORCE java/lang/Long.valueOf(Ljava/lang/String;)Ljava/lang/Long;
FORCE java/lang/Long.valueOf(Ljava/lang/String;I)Ljava/lang/Long;
FORCE java/lang/Math.<init>()V
FORCE java/lang/Math.IEEEremainder(DD)D
FORCE java/lang/Math.abs(D)D
FORCE java/lang/Math.abs(F)F
FORCE java/lang/Math.abs(I)I
FORCE java/lang/Math.abs(J)J
FORCE java/lang/Math.acos(D)D
FORCE java/lang/Math.addExact(II)I
FORCE java/lang/Math.addExact(JJ)J
FORCE java/lang/Math.asin(D)D
FORCE java/lang/Math.atan(D)D
FORCE java/lang/Math.atan2(DD)D
FORCE java/lang/Math.cbrt(D)D
FORCE java/lang/Math.ceil(D)D
FORCE java/lang/Math.copySign(DD)D
FORCE java/lang/Math.copySign(FF)F
FORCE java/lang/Math.cos(D)D
FORCE java/lang/Math.cosh(D)D
FORCE java/lang/Math.decrementExact(I)I
FORCE java/lang/Math.decrementExact(J)J
FORCE java/lang/Math.exp(D)D
FORCE java/lang/Math.expm1(D)D
FORCE java/lang/Math.floor(D)D
FORCE java/lang/Math.floorDiv(II)I
FORCE java/lang/Math.floorDiv(JJ)J
FORCE java/lang/Math.floorMod(II)I
FORCE java/lang/Math.floorMod(JJ)J
FORCE java/lang/Math.getExponent(D)I
FORCE java/lang/Math.getExponent(F)I
FORCE java/lang/Math.hypot(DD)D
FORCE java/lang/Math.incrementExact(I)I
FORCE java/lang/Math.incrementExact(J)J
FORCE java/lang/Math.log(D)D
FORCE java/lang/Math.log10(D)D
FORCE java/lang/Math.log1p(D)D
FORCE java/lang/Math.max(II)I
FORCE java/lang/Math.max(JJ)J
FORCE java/lang/Math.min(II)I
FORCE java/lang/Math.min(JJ)J
FORCE java/lang/Math.multiplyExact(II)I
FORCE java/lang/Math.multiplyExact(JJ)J
FORCE java/lang/Math.negateExact(I)I
FORCE java/lang/Math.negateExact(J)J
FORCE java/lang/Math.nextAfter(DD)D
FORCE java/lang/Math.nextAfter(FD)F
FORCE java/lang/Math.nextDown(D)D
FORCE java/lang/Math.nextDown(F)F
FORCE java/lang/Math.nextUp(D)D
FORCE java/lang/Math.nextUp(F)F
FORCE java/lang/Math.pow(DD)D
FORCE java/lang/Math.powerOfTwoD(I)D
FORCE java/lang/Math.powerOfTwoF(I)F
FORCE java/lang/Math.rint(D)D
FORCE java/lang/Math.round(D)J
FORCE java/lang/Math.round(F)I
FORCE java/lang/Math.scalb(FI)F
FORCE java/lang/Math.signum(D)D
FORCE java/lang/Math.signum(F)F
FORCE java/lang/Math.sin(D)D
FORCE java/lang/Math.sinh(D)D
FORCE java/lang/Math.sqrt(D)D
FORCE java/lang/Math.subtractExact(II)I
FORCE java/lang/Math.subtractExact(JJ)J
FORCE java/lang/Math.tan(D)D
FORCE java/lang/Math.tanh(D)D
FORCE java/lang/Math.toDegrees(D)D
FORCE java/lang/Math.toIntExact(J)I
FORCE java/lang/Math.toRadians(D)D
FORCE java/lang/Math.ulp(D)D
FORCE java/lang/Math.ulp(F)F
FORCE java/lang/Number.<init>()V
FORCE java/lang/Number.byteValue()B
FORCE java/lang/Number.doubleValue()D
FORCE java/lang/Number.floatValue()F
FORCE java/lang/Number.intValue()I
FORCE java/lang/Number.longValue()J
FORCE java/lang/Number.shortValue()S
FORCE java/lang/StrictMath.<clinit>()V
FORCE java/lang/StrictMath.<init>()V
FORCE java/lang/StrictMath.IEEEremainder(DD)D
FORCE java/lang/StrictMath.abs(D)D
FORCE java/lang/StrictMath.abs(F)F
FORCE java/lang/StrictMath.abs(I)I
FORCE java/lang/StrictMath.abs(J)J
FORCE java/lang/StrictMath.acos(D)D
FORCE java/lang/StrictMath.addExact(II)I
FORCE java/lang/StrictMath.addExact(JJ)J
FORCE java/lang/StrictMath.asin(D)D
FORCE java/lang/StrictMath.atan(D)D
FORCE java/lang/StrictMath.atan2(DD)D
FORCE java/lang/StrictMath.cbrt(D)D
FORCE java/lang/StrictMath.ceil(D)D
FORCE java/lang/StrictMath.copySign(DD)D
FORCE java/lang/StrictMath.copySign(FF)F
FORCE java/lang/StrictMath.cos(D)D
FORCE java/lang/StrictMath.cosh(D)D
FORCE java/lang/StrictMath.exp(D)D
FORCE java/lang/StrictMath.expm1(D)D
FORCE java/lang/StrictMath.floor(D)D
FORCE java/lang/StrictMath.floorDiv(II)I
FORCE java/lang/StrictMath.floorDiv(JJ)J
FORCE java/lang/StrictMath.floorMod(II)I
FORCE java/lang/StrictMath.floorMod(JJ)J
FORCE java/lang/StrictMath.floorOrCeil(DDDD)D
FORCE java/lang/StrictMath.getExponent(D)I
FORCE java/lang/StrictMath.getExponent(F)I
FORCE java/lang/StrictMath.hypot(DD)D
FORCE java/lang/StrictMath.log(D)D
FORCE java/lang/StrictMath.log10(D)D
FORCE java/lang/StrictMath.log1p(D)D
FORCE java/lang/StrictMath.max(DD)D
FORCE java/lang/StrictMath.max(FF)F
FORCE java/lang/StrictMath.max(II)I
FORCE java/lang/StrictMath.max(JJ)J
FORCE java/lang/StrictMath.min(DD)D
FORCE java/lang/StrictMath.min(FF)F
FORCE java/lang/StrictMath.min(II)I
FORCE java/lang/StrictMath.min(JJ)J
FORCE java/lang/StrictMath.multiplyExact(II)I
FORCE java/lang/StrictMath.multiplyExact(JJ)J
FORCE java/lang/StrictMath.nextAfter(DD)D
FORCE java/lang/StrictMath.nextAfter(FD)F
FORCE java/lang/StrictMath.nextDown(D)D
FORCE java/lang/StrictMath.nextDown(F)F
FORCE java/lang/StrictMath.nextUp(D)D
FORCE java/lang/StrictMath.nextUp(F)F
FORCE java/lang/StrictMath.pow(DD)D
FORCE java/lang/StrictMath.rint(D)D
FORCE java/lang/StrictMath.round(D)J
FORCE java/lang/StrictMath.round(F)I
FORCE java/lang/StrictMath.scalb(DI)D
FORCE java/lang/StrictMath.scalb(FI)F
FORCE java/lang/StrictMath.signum(D)D
FORCE java/lang/StrictMath.signum(F)F
FORCE java/lang/StrictMath.sin(D)D
FORCE java/lang/StrictMath.sinh(D)D
FORCE java/lang/StrictMath.sqrt(D)D
FORCE java/lang/StrictMath.subtractExact(II)I
FORCE java/lang/StrictMath.subtractExact(JJ)J
FORCE java/lang/StrictMath.tan(D)D
FORCE java/lang/StrictMath.tanh(D)D
FORCE java/lang/StrictMath.toDegrees(D)D
FORCE java/lang/StrictMath.toIntExact(J)I
FORCE java/lang/StrictMath.toRadians(D)D
FORCE java/lang/StrictMath.ulp(D)D
FORCE java/lang/StrictMath.ulp(F)F
FORCE java/lang/String.<init>()V
FORCE java/lang/String.<init>(Ljava/lang/String;)V
FORCE java/lang/String.<init>(Ljava/lang/StringBuffer;)V
FORCE java/lang/String.<init>(Ljava/lang/StringBuilder;)V
FORCE java/lang/String.<init>([B)V
FORCE java/lang/String.<init>([BI)V
FORCE java/lang/String.<init>([BIII)V
FORCE java/lang/String.<init>([BLjava/lang/String;)V
FORCE java/lang/String.<init>([BLjava/nio/charset/Charset;)V
FORCE java/lang/String.<init>([C)V
FORCE java/lang/String.<init>([CII)V
FORCE java/lang/String.<init>([CZ)V
FORCE java/lang/String.<init>([III)V
FORCE java/lang/String.charAt(I)C
FORCE java/lang/String.checkBounds([BII)V
FORCE java/lang/String.codePointAt(I)I
FORCE java/lang/String.codePointBefore(I)I
FORCE java/lang/String.codePointCount(II)I
FORCE java/lang/String.compareTo(Ljava/lang/Object;)I
FORCE java/lang/String.compareTo(Ljava/lang/String;)I
FORCE java/lang/String.concat(Ljava/lang/String;)Ljava/lang/String;
FORCE java/lang/String.contains(Ljava/lang/CharSequence;)Z
FORCE java/lang/String.contentEquals(Ljava/lang/CharSequence;)Z
FORCE java/lang/String.contentEquals(Ljava/lang/StringBuffer;)Z
FORCE java/lang/String.copyValueOf([C)Ljava/lang/String;
FORCE java/lang/String.copyValueOf([CII)Ljava/lang/String;
FORCE java/lang/String.endsWith(Ljava/lang/String;)Z
FORCE java/lang/String.equals(Ljava/lang/Object;)Z
FORCE java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z
FORCE java/lang/String.getBytes(II[BI)V
FORCE java/lang/String.getChars(II[CI)V
FORCE java/lang/String.getChars([CI)V
FORCE java/lang/String.hashCode()I
FORCE java/lang/String.indexOf(I)I
FORCE java/lang/String.indexOf(II)I
FORCE java/lang/String.indexOf(Ljava/lang/String;)I
FORCE java/lang/String.indexOf(Ljava/lang/String;I)I
FORCE java/lang/String.indexOf([CIILjava/lang/String;I)I
FORCE java/lang/String.indexOf([CII[CIII)I
FORCE java/lang/String.indexOfSupplementary(II)I
FORCE java/lang/String.intern()Ljava/lang/String;
FORCE java/lang/String.isEmpty()Z
FORCE java/lang/String.lastIndexOf(I)I
FORCE java/lang/String.lastIndexOf(II)I
FORCE java/lang/String.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/String.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/String.lastIndexOf([CIILjava/lang/String;I)I
FORCE java/lang/String.lastIndexOf([CII[CIII)I
FORCE java/lang/String.lastIndexOfSupplementary(II)I
FORCE java/lang/String.length()I
FORCE java/lang/String.nonSyncContentEquals(Ljava/lang/AbstractStringBuilder;)Z
FORCE java/lang/String.offsetByCodePoints(II)I
FORCE java/lang/String.regionMatches(ILjava/lang/String;II)Z
FORCE java/lang/String.regionMatches(ZILjava/lang/String;II)Z
FORCE java/lang/String.replace(CC)Ljava/lang/String;
FORCE java/lang/String.split(Ljava/lang/String;)[Ljava/lang/String;
FORCE java/lang/String.startsWith(Ljava/lang/String;)Z
FORCE java/lang/String.startsWith(Ljava/lang/String;I)Z
FORCE java/lang/String.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/String.substring(I)Ljava/lang/String;
FORCE java/lang/String.substring(II)Ljava/lang/String;
FORCE java/lang/String.toCharArray()[C
FORCE java/lang/String.toString()Ljava/lang/String;
FORCE java/lang/String.trim()Ljava/lang/String;
FORCE java/lang/String.valueOf(C)Ljava/lang/String;
FORCE java/lang/String.valueOf(D)Ljava/lang/String;
FORCE java/lang/String.valueOf(F)Ljava/lang/String;
FORCE java/lang/String.valueOf(I)Ljava/lang/String;
FORCE java/lang/String.valueOf(J)Ljava/lang/String;
FORCE java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/lang/String.valueOf(Z)Ljava/lang/String;
FORCE java/lang/String.valueOf([C)Ljava/lang/String;
FORCE java/lang/String.valueOf([CII)Ljava/lang/String;
FORCE java/lang/StringBuffer.<init>()V
FORCE java/lang/StringBuffer.<init>(I)V
FORCE java/lang/StringBuffer.<init>(Ljava/lang/CharSequence;)V
FORCE java/lang/StringBuffer.<init>(Ljava/lang/String;)V
FORCE java/lang/StringBuffer.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(C)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(D)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(D)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(F)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(F)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(J)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/StringBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append(Z)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append([C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append([C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.append([CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.append([CII)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.appendCodePoint(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.capacity()I
FORCE java/lang/StringBuffer.charAt(I)C
FORCE java/lang/StringBuffer.codePointAt(I)I
FORCE java/lang/StringBuffer.codePointBefore(I)I
FORCE java/lang/StringBuffer.codePointCount(II)I
FORCE java/lang/StringBuffer.delete(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.delete(II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.deleteCharAt(I)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.ensureCapacity(I)V
FORCE java/lang/StringBuffer.getChars(II[CI)V
FORCE java/lang/StringBuffer.indexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuffer.indexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuffer.insert(IC)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IC)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ID)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IF)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IJ)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/Object;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(ILjava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(IZ)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(I[C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(I[C)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.insert(I[CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.insert(I[CII)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuffer.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuffer.length()I
FORCE java/lang/StringBuffer.offsetByCodePoints(II)I
FORCE java/lang/StringBuffer.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.replace(IILjava/lang/String;)Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuffer.reverse()Ljava/lang/StringBuffer;
FORCE java/lang/StringBuffer.setCharAt(IC)V
FORCE java/lang/StringBuffer.setLength(I)V
FORCE java/lang/StringBuffer.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/StringBuffer.substring(I)Ljava/lang/String;
FORCE java/lang/StringBuffer.substring(II)Ljava/lang/String;
FORCE java/lang/StringBuffer.toString()Ljava/lang/String;
FORCE java/lang/StringBuffer.trimToSize()V
FORCE java/lang/StringBuilder.<init>()V
FORCE java/lang/StringBuilder.<init>(I)V
FORCE java/lang/StringBuilder.<init>(Ljava/lang/CharSequence;)V
FORCE java/lang/StringBuilder.<init>(Ljava/lang/String;)V
FORCE java/lang/StringBuilder.append(C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(C)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(D)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(D)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(F)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(F)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(J)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(J)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FORCE java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append(Z)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append([C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append([C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.append([CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.append([CII)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.capacity()I
FORCE java/lang/StringBuilder.charAt(I)C
FORCE java/lang/StringBuilder.codePointAt(I)I
FORCE java/lang/StringBuilder.codePointBefore(I)I
FORCE java/lang/StringBuilder.codePointCount(II)I
FORCE java/lang/StringBuilder.delete(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.delete(II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.ensureCapacity(I)V
FORCE java/lang/StringBuilder.getChars(II[CI)V
FORCE java/lang/StringBuilder.indexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuilder.indexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuilder.insert(IC)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IC)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ID)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IF)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IJ)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(IZ)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(I[C)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(I[C)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.insert(I[CII)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;)I
FORCE java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;I)I
FORCE java/lang/StringBuilder.length()I
FORCE java/lang/StringBuilder.offsetByCodePoints(II)I
FORCE java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.reverse()Ljava/lang/AbstractStringBuilder;
FORCE java/lang/StringBuilder.reverse()Ljava/lang/StringBuilder;
FORCE java/lang/StringBuilder.setCharAt(IC)V
FORCE java/lang/StringBuilder.setLength(I)V
FORCE java/lang/StringBuilder.subSequence(II)Ljava/lang/CharSequence;
FORCE java/lang/StringBuilder.substring(I)Ljava/lang/String;
FORCE java/lang/StringBuilder.substring(II)Ljava/lang/String;
FORCE java/lang/StringBuilder.toString()Ljava/lang/String;
FORCE java/lang/StringBuilder.trimToSize()V
FORCE java/lang/Void.<init>()V
FORCE java/net/URI.<clinit>()V
FORCE java/net/URI.<init>()V
FORCE java/net/URI.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
FORCE java/net/URI.access$002(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$100()J
FORCE java/net/URI.access$1002(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$1102(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$1200()J
FORCE java/net/URI.access$1300()J
FORCE java/net/URI.access$1402(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$1502(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$1600()J
FORCE java/net/URI.access$1700()J
FORCE java/net/URI.access$1800()J
FORCE java/net/URI.access$1900()J
FORCE java/net/URI.access$200()J
FORCE java/net/URI.access$2000()J
FORCE java/net/URI.access$2100()J
FORCE java/net/URI.access$2202(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$2302(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$2402(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$2502(Ljava/net/URI;I)I
FORCE java/net/URI.access$2600()J
FORCE java/net/URI.access$2700()J
FORCE java/net/URI.access$2800()J
FORCE java/net/URI.access$2900()J
FORCE java/net/URI.access$300(CJJ)Z
FORCE java/net/URI.access$3000()J
FORCE java/net/URI.access$3100()J
FORCE java/net/URI.access$3200()J
FORCE java/net/URI.access$3300()J
FORCE java/net/URI.access$3400()J
FORCE java/net/URI.access$400()J
FORCE java/net/URI.access$500()J
FORCE java/net/URI.access$600()J
FORCE java/net/URI.access$702(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.access$800()J
FORCE java/net/URI.access$900()J
FORCE java/net/URI.appendAuthority(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
FORCE java/net/URI.appendEscape(Ljava/lang/StringBuffer;B)V
FORCE java/net/URI.appendFragment(Ljava/lang/StringBuffer;Ljava/lang/String;)V
FORCE java/net/URI.appendSchemeSpecificPart(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
FORCE java/net/URI.checkPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
FORCE java/net/URI.compare(Ljava/lang/String;Ljava/lang/String;)I
FORCE java/net/URI.compareIgnoringCase(Ljava/lang/String;Ljava/lang/String;)I
FORCE java/net/URI.compareTo(Ljava/lang/Object;)I
FORCE java/net/URI.compareTo(Ljava/net/URI;)I
FORCE java/net/URI.create(Ljava/lang/String;)Ljava/net/URI;
FORCE java/net/URI.decode(C)I
FORCE java/net/URI.decode(CC)B
FORCE java/net/URI.defineSchemeSpecificPart()V
FORCE java/net/URI.defineString()V
FORCE java/net/URI.equal(Ljava/lang/String;Ljava/lang/String;)Z
FORCE java/net/URI.equalIgnoringCase(Ljava/lang/String;Ljava/lang/String;)Z
FORCE java/net/URI.equals(Ljava/lang/Object;)Z
FORCE java/net/URI.getAuthority()Ljava/lang/String;
FORCE java/net/URI.getFragment()Ljava/lang/String;
FORCE java/net/URI.getHost()Ljava/lang/String;
FORCE java/net/URI.getPath()Ljava/lang/String;
FORCE java/net/URI.getPort()I
FORCE java/net/URI.getQuery()Ljava/lang/String;
FORCE java/net/URI.getRawAuthority()Ljava/lang/String;
FORCE java/net/URI.getRawFragment()Ljava/lang/String;
FORCE java/net/URI.getRawPath()Ljava/lang/String;
FORCE java/net/URI.getRawQuery()Ljava/lang/String;
FORCE java/net/URI.getRawSchemeSpecificPart()Ljava/lang/String;
FORCE java/net/URI.getRawUserInfo()Ljava/lang/String;
FORCE java/net/URI.getScheme()Ljava/lang/String;
FORCE java/net/URI.getSchemeSpecificPart()Ljava/lang/String;
FORCE java/net/URI.getUserInfo()Ljava/lang/String;
FORCE java/net/URI.hash(ILjava/lang/String;)I
FORCE java/net/URI.hashCode()I
FORCE java/net/URI.hashIgnoringCase(ILjava/lang/String;)I
FORCE java/net/URI.highMask(CC)J
FORCE java/net/URI.highMask(Ljava/lang/String;)J
FORCE java/net/URI.isAbsolute()Z
FORCE java/net/URI.isOpaque()Z
FORCE java/net/URI.join([C[I)I
FORCE java/net/URI.lowMask(CC)J
FORCE java/net/URI.lowMask(Ljava/lang/String;)J
FORCE java/net/URI.match(CJJ)Z
FORCE java/net/URI.maybeAddLeadingDot([C[I)V
FORCE java/net/URI.needsNormalization(Ljava/lang/String;)I
FORCE java/net/URI.normalize()Ljava/net/URI;
FORCE java/net/URI.normalize(Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.normalize(Ljava/net/URI;)Ljava/net/URI;
FORCE java/net/URI.normalizedHash(ILjava/lang/String;)I
FORCE java/net/URI.quote(Ljava/lang/String;JJ)Ljava/lang/String;
FORCE java/net/URI.relativize(Ljava/net/URI;)Ljava/net/URI;
FORCE java/net/URI.relativize(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;
FORCE java/net/URI.removeDots([C[I)V
FORCE java/net/URI.resolve(Ljava/lang/String;)Ljava/net/URI;
FORCE java/net/URI.resolve(Ljava/net/URI;)Ljava/net/URI;
FORCE java/net/URI.resolve(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;
FORCE java/net/URI.resolvePath(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
FORCE java/net/URI.split([C[I)V
FORCE java/net/URI.toASCIIString()Ljava/lang/String;
FORCE java/net/URI.toLower(C)I
FORCE java/net/URI.toString()Ljava/lang/String;
FORCE java/net/URI.toString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
FORCE java/net/URI.toUpper(C)I
FORCE java/util/AbstractCollection.<init>()V
FORCE java/util/AbstractCollection.add(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.addAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.clear()V
FORCE java/util/AbstractCollection.contains(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.containsAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.finishToArray([Ljava/lang/Object;Ljava/util/Iterator;)[Ljava/lang/Object;
FORCE java/util/AbstractCollection.hugeCapacity(I)I
FORCE java/util/AbstractCollection.isEmpty()Z
FORCE java/util/AbstractCollection.iterator()Ljava/util/Iterator;
FORCE java/util/AbstractCollection.remove(Ljava/lang/Object;)Z
FORCE java/util/AbstractCollection.removeAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.retainAll(Ljava/util/Collection;)Z
FORCE java/util/AbstractCollection.size()I
FORCE java/util/AbstractCollection.toArray()[Ljava/lang/Object;
FORCE java/util/AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
FORCE java/util/AbstractCollection.toString()Ljava/lang/String;
FORCE java/util/AbstractList.<init>()V
FORCE java/util/AbstractList.add(ILjava/lang/Object;)V
FORCE java/util/AbstractList.add(Ljava/lang/Object;)Z
FORCE java/util/AbstractList.addAll(ILjava/util/Collection;)Z
FORCE java/util/AbstractList.clear()V
FORCE java/util/AbstractList.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractList.get(I)Ljava/lang/Object;
FORCE java/util/AbstractList.indexOf(Ljava/lang/Object;)I
FORCE java/util/AbstractList.lastIndexOf(Ljava/lang/Object;)I
FORCE java/util/AbstractList.listIterator()Ljava/util/ListIterator;
FORCE java/util/AbstractList.outOfBoundsMsg(I)Ljava/lang/String;
FORCE java/util/AbstractList.rangeCheckForAdd(I)V
FORCE java/util/AbstractList.remove(I)Ljava/lang/Object;
FORCE java/util/AbstractList.removeRange(II)V
FORCE java/util/AbstractList.set(ILjava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE java/util/AbstractMap$SimpleEntry.<init>(Ljava/util/Map$Entry;)V
FORCE java/util/AbstractMap$SimpleEntry.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap$SimpleEntry.getKey()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.getValue()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleEntry.toString()Ljava/lang/String;
FORCE java/util/AbstractMap$SimpleImmutableEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE java/util/AbstractMap$SimpleImmutableEntry.<init>(Ljava/util/Map$Entry;)V
FORCE java/util/AbstractMap$SimpleImmutableEntry.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap$SimpleImmutableEntry.getKey()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.getValue()Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap$SimpleImmutableEntry.toString()Ljava/lang/String;
FORCE java/util/AbstractMap.<init>()V
FORCE java/util/AbstractMap.access$000(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.clear()V
FORCE java/util/AbstractMap.clone()Ljava/lang/Object;
FORCE java/util/AbstractMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.entrySet()Ljava/util/Set;
FORCE java/util/AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.hashCode()I
FORCE java/util/AbstractMap.isEmpty()Z
FORCE java/util/AbstractMap.keySet()Ljava/util/Set;
FORCE java/util/AbstractMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.putAll(Ljava/util/Map;)V
FORCE java/util/AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractMap.size()I
FORCE java/util/AbstractMap.toString()Ljava/lang/String;
FORCE java/util/AbstractMap.values()Ljava/util/Collection;
FORCE java/util/AbstractSequentialList.<init>()V
FORCE java/util/AbstractSequentialList.add(ILjava/lang/Object;)V
FORCE java/util/AbstractSequentialList.addAll(ILjava/util/Collection;)Z
FORCE java/util/AbstractSequentialList.get(I)Ljava/lang/Object;
FORCE java/util/AbstractSequentialList.iterator()Ljava/util/Iterator;
FORCE java/util/AbstractSequentialList.listIterator(I)Ljava/util/ListIterator;
FORCE java/util/AbstractSequentialList.remove(I)Ljava/lang/Object;
FORCE java/util/AbstractSequentialList.set(ILjava/lang/Object;)Ljava/lang/Object;
FORCE java/util/AbstractSet.<init>()V
FORCE java/util/AbstractSet.equals(Ljava/lang/Object;)Z
FORCE java/util/AbstractSet.removeAll(Ljava/util/Collection;)Z
FORCE java/util/ArrayList.<clinit>()V
FORCE java/util/ArrayList.<init>()V
FORCE java/util/ArrayList.<init>(I)V
FORCE java/util/ArrayList.<init>(Ljava/util/Collection;)V
FORCE java/util/ArrayList.access$100(Ljava/util/ArrayList;)I
FORCE java/util/ArrayList.add(ILjava/lang/Object;)V
FORCE java/util/ArrayList.add(Ljava/lang/Object;)Z
FORCE java/util/ArrayList.addAll(ILjava/util/Collection;)Z
FORCE java/util/ArrayList.addAll(Ljava/util/Collection;)Z
FORCE java/util/ArrayList.batchRemove(Ljava/util/Collection;Z)Z
FORCE java/util/ArrayList.clear()V
FORCE java/util/ArrayList.clone()Ljava/lang/Object;
FORCE java/util/ArrayList.contains(Ljava/lang/Object;)Z
FORCE java/util/ArrayList.elementData(I)Ljava/lang/Object;
FORCE java/util/ArrayList.ensureCapacity(I)V
FORCE java/util/ArrayList.ensureCapacityInternal(I)V
FORCE java/util/ArrayList.ensureExplicitCapacity(I)V
FORCE java/util/ArrayList.fastRemove(I)V
FORCE java/util/ArrayList.forEach(Ljava/util/function/Consumer;)V
FORCE java/util/ArrayList.get(I)Ljava/lang/Object;
FORCE java/util/ArrayList.grow(I)V
FORCE java/util/ArrayList.hugeCapacity(I)I
FORCE java/util/ArrayList.indexOf(Ljava/lang/Object;)I
FORCE java/util/ArrayList.isEmpty()Z
FORCE java/util/ArrayList.lastIndexOf(Ljava/lang/Object;)I
FORCE java/util/ArrayList.outOfBoundsMsg(I)Ljava/lang/String;
FORCE java/util/ArrayList.rangeCheck(I)V
FORCE java/util/ArrayList.rangeCheckForAdd(I)V
FORCE java/util/ArrayList.remove(I)Ljava/lang/Object;
FORCE java/util/ArrayList.remove(Ljava/lang/Object;)Z
FORCE java/util/ArrayList.removeAll(Ljava/util/Collection;)Z
FORCE java/util/ArrayList.removeRange(II)V
FORCE java/util/ArrayList.replaceAll(Ljava/util/function/UnaryOperator;)V
FORCE java/util/ArrayList.retainAll(Ljava/util/Collection;)Z
FORCE java/util/ArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
FORCE java/util/ArrayList.size()I
FORCE java/util/ArrayList.sort(Ljava/util/Comparator;)V
FORCE java/util/ArrayList.subListRangeCheck(III)V
FORCE java/util/ArrayList.toArray()[Ljava/lang/Object;
FORCE java/util/ArrayList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
FORCE java/util/ArrayList.trimToSize()V
FORCE java/util/Arrays.<clinit>()V
FORCE java/util/Arrays.<init>()V
FORCE java/util/Arrays.asList([Ljava/lang/Object;)Ljava/util/List;
FORCE java/util/Arrays.binarySearch([BB)I
FORCE java/util/Arrays.binarySearch([BIIB)I
FORCE java/util/Arrays.binarySearch([CC)I
FORCE java/util/Arrays.binarySearch([CIIC)I
FORCE java/util/Arrays.binarySearch([DD)I
FORCE java/util/Arrays.binarySearch([DIID)I
FORCE java/util/Arrays.binarySearch([FF)I
FORCE java/util/Arrays.binarySearch([FIIF)I
FORCE java/util/Arrays.binarySearch([II)I
FORCE java/util/Arrays.binarySearch([IIII)I
FORCE java/util/Arrays.binarySearch([JIIJ)I
FORCE java/util/Arrays.binarySearch([JJ)I
FORCE java/util/Arrays.binarySearch([Ljava/lang/Object;IILjava/lang/Object;)I
FORCE java/util/Arrays.binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Arrays.binarySearch([Ljava/lang/Object;Ljava/lang/Object;)I
FORCE java/util/Arrays.binarySearch([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Arrays.binarySearch([SIIS)I
FORCE java/util/Arrays.binarySearch([SS)I
FORCE java/util/Arrays.binarySearch0([BIIB)I
FORCE java/util/Arrays.binarySearch0([CIIC)I
FORCE java/util/Arrays.binarySearch0([DIID)I
FORCE java/util/Arrays.binarySearch0([FIIF)I
FORCE java/util/Arrays.binarySearch0([IIII)I
FORCE java/util/Arrays.binarySearch0([JIIJ)I
FORCE java/util/Arrays.binarySearch0([Ljava/lang/Object;IILjava/lang/Object;)I
FORCE java/util/Arrays.binarySearch0([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Arrays.binarySearch0([SIIS)I
FORCE java/util/Arrays.copyOf([BI)[B
FORCE java/util/Arrays.copyOf([CI)[C
FORCE java/util/Arrays.copyOf([DI)[D
FORCE java/util/Arrays.copyOf([FI)[F
FORCE java/util/Arrays.copyOf([II)[I
FORCE java/util/Arrays.copyOf([JI)[J
FORCE java/util/Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;
FORCE java/util/Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
FORCE java/util/Arrays.copyOf([SI)[S
FORCE java/util/Arrays.copyOf([ZI)[Z
FORCE java/util/Arrays.copyOfRange([BII)[B
FORCE java/util/Arrays.copyOfRange([CII)[C
FORCE java/util/Arrays.copyOfRange([DII)[D
FORCE java/util/Arrays.copyOfRange([FII)[F
FORCE java/util/Arrays.copyOfRange([III)[I
FORCE java/util/Arrays.copyOfRange([JII)[J
FORCE java/util/Arrays.copyOfRange([Ljava/lang/Object;II)[Ljava/lang/Object;
FORCE java/util/Arrays.copyOfRange([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;
FORCE java/util/Arrays.copyOfRange([SII)[S
FORCE java/util/Arrays.copyOfRange([ZII)[Z
FORCE java/util/Arrays.deepEquals([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/util/Arrays.deepEquals0(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Arrays.deepToString([Ljava/lang/Object;)Ljava/lang/String;
FORCE java/util/Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
FORCE java/util/Arrays.equals([B[B)Z
FORCE java/util/Arrays.equals([C[C)Z
FORCE java/util/Arrays.equals([D[D)Z
FORCE java/util/Arrays.equals([F[F)Z
FORCE java/util/Arrays.equals([I[I)Z
FORCE java/util/Arrays.equals([J[J)Z
FORCE java/util/Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z
FORCE java/util/Arrays.equals([S[S)Z
FORCE java/util/Arrays.equals([Z[Z)Z
FORCE java/util/Arrays.fill([BB)V
FORCE java/util/Arrays.fill([BIIB)V
FORCE java/util/Arrays.fill([CC)V
FORCE java/util/Arrays.fill([CIIC)V
FORCE java/util/Arrays.fill([DD)V
FORCE java/util/Arrays.fill([DIID)V
FORCE java/util/Arrays.fill([FF)V
FORCE java/util/Arrays.fill([FIIF)V
FORCE java/util/Arrays.fill([II)V
FORCE java/util/Arrays.fill([IIII)V
FORCE java/util/Arrays.fill([JIIJ)V
FORCE java/util/Arrays.fill([JJ)V
FORCE java/util/Arrays.fill([Ljava/lang/Object;IILjava/lang/Object;)V
FORCE java/util/Arrays.fill([Ljava/lang/Object;Ljava/lang/Object;)V
FORCE java/util/Arrays.fill([SIIS)V
FORCE java/util/Arrays.fill([SS)V
FORCE java/util/Arrays.fill([ZIIZ)V
FORCE java/util/Arrays.fill([ZZ)V
FORCE java/util/Arrays.hashCode([B)I
FORCE java/util/Arrays.hashCode([C)I
FORCE java/util/Arrays.hashCode([D)I
FORCE java/util/Arrays.hashCode([F)I
FORCE java/util/Arrays.hashCode([I)I
FORCE java/util/Arrays.hashCode([J)I
FORCE java/util/Arrays.hashCode([S)I
FORCE java/util/Arrays.hashCode([Z)I
FORCE java/util/Arrays.lambda$parallelSetAll$100([DLjava/util/function/IntToDoubleFunction;I)V
FORCE java/util/Arrays.lambda$parallelSetAll$97([Ljava/lang/Object;Ljava/util/function/IntFunction;I)V
FORCE java/util/Arrays.lambda$parallelSetAll$98([ILjava/util/function/IntUnaryOperator;I)V
FORCE java/util/Arrays.lambda$parallelSetAll$99([JLjava/util/function/IntToLongFunction;I)V
FORCE java/util/Arrays.legacyMergeSort([Ljava/lang/Object;)V
FORCE java/util/Arrays.legacyMergeSort([Ljava/lang/Object;II)V
FORCE java/util/Arrays.legacyMergeSort([Ljava/lang/Object;IILjava/util/Comparator;)V
FORCE java/util/Arrays.legacyMergeSort([Ljava/lang/Object;Ljava/util/Comparator;)V
FORCE java/util/Arrays.mergeSort([Ljava/lang/Object;[Ljava/lang/Object;III)V
FORCE java/util/Arrays.mergeSort([Ljava/lang/Object;[Ljava/lang/Object;IIILjava/util/Comparator;)V
FORCE java/util/Arrays.rangeCheck(III)V
FORCE java/util/Arrays.setAll([DLjava/util/function/IntToDoubleFunction;)V
FORCE java/util/Arrays.setAll([ILjava/util/function/IntUnaryOperator;)V
FORCE java/util/Arrays.setAll([JLjava/util/function/IntToLongFunction;)V
FORCE java/util/Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V
FORCE java/util/Arrays.stream([D)Ljava/util/stream/DoubleStream;
FORCE java/util/Arrays.stream([I)Ljava/util/stream/IntStream;
FORCE java/util/Arrays.stream([J)Ljava/util/stream/LongStream;
FORCE java/util/Arrays.stream([Ljava/lang/Object;)Ljava/util/stream/Stream;
FORCE java/util/Arrays.swap([Ljava/lang/Object;II)V
FORCE java/util/Arrays.toString([B)Ljava/lang/String;
FORCE java/util/Arrays.toString([C)Ljava/lang/String;
FORCE java/util/Arrays.toString([D)Ljava/lang/String;
FORCE java/util/Arrays.toString([F)Ljava/lang/String;
FORCE java/util/Arrays.toString([I)Ljava/lang/String;
FORCE java/util/Arrays.toString([J)Ljava/lang/String;
FORCE java/util/Arrays.toString([Ljava/lang/Object;)Ljava/lang/String;
FORCE java/util/Arrays.toString([S)Ljava/lang/String;
FORCE java/util/Arrays.toString([Z)Ljava/lang/String;
FORCE java/util/Collections.<init>()V
FORCE java/util/Collections.addAll(Ljava/util/Collection;[Ljava/lang/Object;)Z
FORCE java/util/Collections.binarySearch(Ljava/util/List;Ljava/lang/Object;)I
FORCE java/util/Collections.binarySearch(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Collections.copy(Ljava/util/List;Ljava/util/List;)V
FORCE java/util/Collections.disjoint(Ljava/util/Collection;Ljava/util/Collection;)Z
FORCE java/util/Collections.enumeration(Ljava/util/Collection;)Ljava/util/Enumeration;
FORCE java/util/Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Collections.fill(Ljava/util/List;Ljava/lang/Object;)V
FORCE java/util/Collections.frequency(Ljava/util/Collection;Ljava/lang/Object;)I
FORCE java/util/Collections.get(Ljava/util/ListIterator;I)Ljava/lang/Object;
FORCE java/util/Collections.indexOfSubList(Ljava/util/List;Ljava/util/List;)I
FORCE java/util/Collections.indexedBinarySearch(Ljava/util/List;Ljava/lang/Object;)I
FORCE java/util/Collections.indexedBinarySearch(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Collections.iteratorBinarySearch(Ljava/util/List;Ljava/lang/Object;)I
FORCE java/util/Collections.iteratorBinarySearch(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Collections.lastIndexOfSubList(Ljava/util/List;Ljava/util/List;)I
FORCE java/util/Collections.list(Ljava/util/Enumeration;)Ljava/util/ArrayList;
FORCE java/util/Collections.max(Ljava/util/Collection;)Ljava/lang/Object;
FORCE java/util/Collections.max(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;
FORCE java/util/Collections.min(Ljava/util/Collection;)Ljava/lang/Object;
FORCE java/util/Collections.min(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;
FORCE java/util/Collections.replaceAll(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Collections.reverse(Ljava/util/List;)V
FORCE java/util/Collections.rotate(Ljava/util/List;I)V
FORCE java/util/Collections.rotate1(Ljava/util/List;I)V
FORCE java/util/Collections.rotate2(Ljava/util/List;I)V
FORCE java/util/Collections.singletonIterator(Ljava/lang/Object;)Ljava/util/Iterator;
FORCE java/util/Collections.singletonSpliterator(Ljava/lang/Object;)Ljava/util/Spliterator;
FORCE java/util/Collections.sort(Ljava/util/List;)V
FORCE java/util/Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V
FORCE java/util/Collections.swap(Ljava/util/List;II)V
FORCE java/util/Collections.swap([Ljava/lang/Object;II)V
FORCE java/util/Collections.zeroLengthArray(Ljava/lang/Class;)[Ljava/lang/Object;
FORCE java/util/Currency.<init>(Ljava/lang/String;II)V
FORCE java/util/Currency.access$000(Ljava/io/DataInputStream;I)[I
FORCE java/util/Currency.access$100(Ljava/io/DataInputStream;I)[J
FORCE java/util/Currency.access$200(Ljava/io/DataInputStream;I)[Ljava/lang/String;
FORCE java/util/Currency.access$300(Ljava/util/regex/Pattern;Ljava/lang/String;Ljava/lang/String;)V
FORCE java/util/Currency.access$400(Ljava/lang/String;Ljava/lang/Throwable;)V
FORCE java/util/Currency.countOccurrences(Ljava/lang/String;C)I
FORCE java/util/Currency.getCurrencyCode()Ljava/lang/String;
FORCE java/util/Currency.getDefaultFractionDigits()I
FORCE java/util/Currency.getInstance(Ljava/lang/String;)Ljava/util/Currency;
FORCE java/util/Currency.getNumericCode()I
FORCE java/util/Currency.readResolve()Ljava/lang/Object;
FORCE java/util/Currency.toString()Ljava/lang/String;
FORCE java/util/Dictionary.<init>()V
FORCE java/util/Dictionary.elements()Ljava/util/Enumeration;
FORCE java/util/Dictionary.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Dictionary.isEmpty()Z
FORCE java/util/Dictionary.keys()Ljava/util/Enumeration;
FORCE java/util/Dictionary.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Dictionary.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Dictionary.size()I
FORCE java/util/EnumMap.<clinit>()V
FORCE java/util/EnumMap.<init>(Ljava/lang/Class;)V
FORCE java/util/EnumMap.<init>(Ljava/util/EnumMap;)V
FORCE java/util/EnumMap.<init>(Ljava/util/Map;)V
FORCE java/util/EnumMap.access$1000(Ljava/util/EnumMap;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/EnumMap.access$1100(Ljava/util/EnumMap;)[Ljava/lang/Enum;
FORCE java/util/EnumMap.access$1200(Ljava/util/EnumMap;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.access$1600(Ljava/util/EnumMap;I)I
FORCE java/util/EnumMap.access$200(Ljava/util/EnumMap;)I
FORCE java/util/EnumMap.access$210(Ljava/util/EnumMap;)I
FORCE java/util/EnumMap.access$500(Ljava/util/EnumMap;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.access$600(Ljava/util/EnumMap;)[Ljava/lang/Object;
FORCE java/util/EnumMap.access$900(Ljava/util/EnumMap;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/EnumMap.clear()V
FORCE java/util/EnumMap.clone()Ljava/lang/Object;
FORCE java/util/EnumMap.clone()Ljava/util/EnumMap;
FORCE java/util/EnumMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/EnumMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/EnumMap.equals(Ljava/lang/Object;)Z
FORCE java/util/EnumMap.equals(Ljava/util/EnumMap;)Z
FORCE java/util/EnumMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.hashCode()I
FORCE java/util/EnumMap.isValidKey(Ljava/lang/Object;)Z
FORCE java/util/EnumMap.maskNull(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.put(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.putAll(Ljava/util/Map;)V
FORCE java/util/EnumMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/EnumMap.size()I
FORCE java/util/EnumMap.typeCheck(Ljava/lang/Enum;)V
FORCE java/util/EnumMap.unmaskNull(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/EnumSet.<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V
FORCE java/util/EnumSet.access$000()[Ljava/lang/Enum;
FORCE java/util/EnumSet.addAll()V
FORCE java/util/EnumSet.addRange(Ljava/lang/Enum;Ljava/lang/Enum;)V
FORCE java/util/EnumSet.allOf(Ljava/lang/Class;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.clone()Ljava/lang/Object;
FORCE java/util/EnumSet.clone()Ljava/util/EnumSet;
FORCE java/util/EnumSet.complement()V
FORCE java/util/EnumSet.complementOf(Ljava/util/EnumSet;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.copyOf(Ljava/util/Collection;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.copyOf(Ljava/util/EnumSet;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.of(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.range(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
FORCE java/util/EnumSet.readObject(Ljava/io/ObjectInputStream;)V
FORCE java/util/EnumSet.typeCheck(Ljava/lang/Enum;)V
FORCE java/util/HashMap.<init>()V
FORCE java/util/HashMap.<init>(I)V
FORCE java/util/HashMap.<init>(IF)V
FORCE java/util/HashMap.<init>(Ljava/util/Map;)V
FORCE java/util/HashMap.afterNodeAccess(Ljava/util/HashMap$Node;)V
FORCE java/util/HashMap.afterNodeInsertion(Z)V
FORCE java/util/HashMap.afterNodeRemoval(Ljava/util/HashMap$Node;)V
FORCE java/util/HashMap.capacity()I
FORCE java/util/HashMap.clear()V
FORCE java/util/HashMap.clone()Ljava/lang/Object;
FORCE java/util/HashMap.comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;
FORCE java/util/HashMap.compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I
FORCE java/util/HashMap.computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
FORCE java/util/HashMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/HashMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/HashMap.forEach(Ljava/util/function/BiConsumer;)V
FORCE java/util/HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.isEmpty()Z
FORCE java/util/HashMap.loadFactor()F
FORCE java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.putAll(Ljava/util/Map;)V
FORCE java/util/HashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.putMapEntries(Ljava/util/Map;Z)V
FORCE java/util/HashMap.reinitialize()V
FORCE java/util/HashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.remove(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/HashMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/HashMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/HashMap.replaceAll(Ljava/util/function/BiFunction;)V
FORCE java/util/HashMap.size()I
FORCE java/util/HashMap.tableSizeFor(I)I
FORCE java/util/HashSet.<clinit>()V
FORCE java/util/HashSet.<init>()V
FORCE java/util/HashSet.<init>(I)V
FORCE java/util/HashSet.<init>(IF)V
FORCE java/util/HashSet.<init>(Ljava/util/Collection;)V
FORCE java/util/HashSet.add(Ljava/lang/Object;)Z
FORCE java/util/HashSet.clear()V
FORCE java/util/HashSet.clone()Ljava/lang/Object;
FORCE java/util/HashSet.contains(Ljava/lang/Object;)Z
FORCE java/util/HashSet.isEmpty()Z
FORCE java/util/HashSet.iterator()Ljava/util/Iterator;
FORCE java/util/HashSet.remove(Ljava/lang/Object;)Z
FORCE java/util/HashSet.size()I
FORCE java/util/Hashtable.<init>()V
FORCE java/util/Hashtable.<init>(I)V
FORCE java/util/Hashtable.<init>(IF)V
FORCE java/util/Hashtable.<init>(Ljava/util/Map;)V
FORCE java/util/Hashtable.access$100(Ljava/util/Hashtable;I)Ljava/util/Iterator;
FORCE java/util/Hashtable.access$200(Ljava/util/Hashtable;)I
FORCE java/util/Hashtable.access$210(Ljava/util/Hashtable;)I
FORCE java/util/Hashtable.access$400(Ljava/util/Hashtable;)[Ljava/util/Hashtable$Entry;
FORCE java/util/Hashtable.access$500(Ljava/util/Hashtable;)I
FORCE java/util/Hashtable.access$508(Ljava/util/Hashtable;)I
FORCE java/util/Hashtable.clear()V
FORCE java/util/Hashtable.contains(Ljava/lang/Object;)Z
FORCE java/util/Hashtable.containsValue(Ljava/lang/Object;)Z
FORCE java/util/Hashtable.elements()Ljava/util/Enumeration;
FORCE java/util/Hashtable.equals(Ljava/lang/Object;)Z
FORCE java/util/Hashtable.forEach(Ljava/util/function/BiConsumer;)V
FORCE java/util/Hashtable.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Hashtable.isEmpty()Z
FORCE java/util/Hashtable.keys()Ljava/util/Enumeration;
FORCE java/util/Hashtable.putAll(Ljava/util/Map;)V
FORCE java/util/Hashtable.rehash()V
FORCE java/util/Hashtable.replaceAll(Ljava/util/function/BiFunction;)V
FORCE java/util/Hashtable.size()I
FORCE java/util/Hashtable.toString()Ljava/lang/String;
FORCE java/util/LinkedList.<init>()V
FORCE java/util/LinkedList.<init>(Ljava/util/Collection;)V
FORCE java/util/LinkedList.add(ILjava/lang/Object;)V
FORCE java/util/LinkedList.add(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.addAll(Ljava/util/Collection;)Z
FORCE java/util/LinkedList.addFirst(Ljava/lang/Object;)V
FORCE java/util/LinkedList.addLast(Ljava/lang/Object;)V
FORCE java/util/LinkedList.checkElementIndex(I)V
FORCE java/util/LinkedList.checkPositionIndex(I)V
FORCE java/util/LinkedList.clear()V
FORCE java/util/LinkedList.clone()Ljava/lang/Object;
FORCE java/util/LinkedList.contains(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.element()Ljava/lang/Object;
FORCE java/util/LinkedList.get(I)Ljava/lang/Object;
FORCE java/util/LinkedList.getFirst()Ljava/lang/Object;
FORCE java/util/LinkedList.getLast()Ljava/lang/Object;
FORCE java/util/LinkedList.indexOf(Ljava/lang/Object;)I
FORCE java/util/LinkedList.isElementIndex(I)Z
FORCE java/util/LinkedList.isPositionIndex(I)Z
FORCE java/util/LinkedList.lastIndexOf(Ljava/lang/Object;)I
FORCE java/util/LinkedList.node(I)Ljava/util/LinkedList$Node;
FORCE java/util/LinkedList.offer(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.offerFirst(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.offerLast(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.outOfBoundsMsg(I)Ljava/lang/String;
FORCE java/util/LinkedList.peek()Ljava/lang/Object;
FORCE java/util/LinkedList.peekFirst()Ljava/lang/Object;
FORCE java/util/LinkedList.peekLast()Ljava/lang/Object;
FORCE java/util/LinkedList.poll()Ljava/lang/Object;
FORCE java/util/LinkedList.pollFirst()Ljava/lang/Object;
FORCE java/util/LinkedList.pollLast()Ljava/lang/Object;
FORCE java/util/LinkedList.pop()Ljava/lang/Object;
FORCE java/util/LinkedList.push(Ljava/lang/Object;)V
FORCE java/util/LinkedList.remove()Ljava/lang/Object;
FORCE java/util/LinkedList.remove(I)Ljava/lang/Object;
FORCE java/util/LinkedList.remove(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.removeFirst()Ljava/lang/Object;
FORCE java/util/LinkedList.removeFirstOccurrence(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.removeLast()Ljava/lang/Object;
FORCE java/util/LinkedList.removeLastOccurrence(Ljava/lang/Object;)Z
FORCE java/util/LinkedList.set(ILjava/lang/Object;)Ljava/lang/Object;
FORCE java/util/LinkedList.size()I
FORCE java/util/LinkedList.superClone()Ljava/util/LinkedList;
FORCE java/util/LinkedList.toArray()[Ljava/lang/Object;
FORCE java/util/LinkedList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
FORCE java/util/LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;
FORCE java/util/LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;
FORCE java/util/LinkedList.unlinkLast(Ljava/util/LinkedList$Node;)Ljava/lang/Object;
FORCE java/util/Objects.<init>()V
FORCE java/util/Objects.compare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
FORCE java/util/Objects.deepEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/Objects.hash([Ljava/lang/Object;)I
FORCE java/util/Objects.isNull(Ljava/lang/Object;)Z
FORCE java/util/Objects.nonNull(Ljava/lang/Object;)Z
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
FORCE java/util/Objects.requireNonNull(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
FORCE java/util/Objects.toString(Ljava/lang/Object;)Ljava/lang/String;
FORCE java/util/Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
FORCE java/util/Stack.<init>()V
FORCE java/util/Stack.empty()Z
FORCE java/util/Stack.peek()Ljava/lang/Object;
FORCE java/util/Stack.pop()Ljava/lang/Object;
FORCE java/util/Stack.push(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Stack.search(Ljava/lang/Object;)I
FORCE java/util/StringTokenizer.<init>(Ljava/lang/String;)V
FORCE java/util/StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;)V
FORCE java/util/StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;Z)V
FORCE java/util/StringTokenizer.countTokens()I
FORCE java/util/StringTokenizer.hasMoreElements()Z
FORCE java/util/StringTokenizer.hasMoreTokens()Z
FORCE java/util/StringTokenizer.isDelimiter(I)Z
FORCE java/util/StringTokenizer.nextElement()Ljava/lang/Object;
FORCE java/util/StringTokenizer.nextToken()Ljava/lang/String;
FORCE java/util/StringTokenizer.nextToken(Ljava/lang/String;)Ljava/lang/String;
FORCE java/util/StringTokenizer.scanToken(I)I
FORCE java/util/StringTokenizer.setMaxDelimCodePoint()V
FORCE java/util/StringTokenizer.skipDelimiters(I)I
FORCE java/util/TreeMap.<clinit>()V
FORCE java/util/TreeMap.<init>()V
FORCE java/util/TreeMap.<init>(Ljava/util/Comparator;)V
FORCE java/util/TreeMap.<init>(Ljava/util/Map;)V
FORCE java/util/TreeMap.<init>(Ljava/util/SortedMap;)V
FORCE java/util/TreeMap.access$000(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.access$100(Ljava/util/TreeMap;)I
FORCE java/util/TreeMap.access$200()Ljava/lang/Object;
FORCE java/util/TreeMap.access$300(Ljava/util/TreeMap;)Ljava/util/Comparator;
FORCE java/util/TreeMap.access$400(Ljava/util/TreeMap;)I
FORCE java/util/TreeMap.access$500(Ljava/util/TreeMap;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.addAllForTreeSet(Ljava/util/SortedSet;Ljava/lang/Object;)V
FORCE java/util/TreeMap.buildFromSorted(ILjava/util/Iterator;Ljava/io/ObjectInputStream;Ljava/lang/Object;)V
FORCE java/util/TreeMap.ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
FORCE java/util/TreeMap.ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.clear()V
FORCE java/util/TreeMap.clone()Ljava/lang/Object;
FORCE java/util/TreeMap.colorOf(Ljava/util/TreeMap$Entry;)Z
FORCE java/util/TreeMap.comparator()Ljava/util/Comparator;
FORCE java/util/TreeMap.compare(Ljava/lang/Object;Ljava/lang/Object;)I
FORCE java/util/TreeMap.computeRedLevel(I)I
FORCE java/util/TreeMap.containsKey(Ljava/lang/Object;)Z
FORCE java/util/TreeMap.containsValue(Ljava/lang/Object;)Z
FORCE java/util/TreeMap.deleteEntry(Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.descendingKeySet()Ljava/util/NavigableSet;
FORCE java/util/TreeMap.exportEntry(Ljava/util/TreeMap$Entry;)Ljava/util/Map$Entry;
FORCE java/util/TreeMap.firstEntry()Ljava/util/Map$Entry;
FORCE java/util/TreeMap.firstKey()Ljava/lang/Object;
FORCE java/util/TreeMap.fixAfterDeletion(Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.fixAfterInsertion(Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
FORCE java/util/TreeMap.floorKey(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.forEach(Ljava/util/function/BiConsumer;)V
FORCE java/util/TreeMap.get(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.getCeilingEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getEntryUsingComparator(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getFirstEntry()Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getFloorEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getHigherEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getLastEntry()Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.getLowerEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
FORCE java/util/TreeMap.higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
FORCE java/util/TreeMap.higherKey(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.key(Ljava/util/TreeMap$Entry;)Ljava/lang/Object;
FORCE java/util/TreeMap.keyOrNull(Ljava/util/TreeMap$Entry;)Ljava/lang/Object;
FORCE java/util/TreeMap.keySet()Ljava/util/Set;
FORCE java/util/TreeMap.lastEntry()Ljava/util/Map$Entry;
FORCE java/util/TreeMap.lastKey()Ljava/lang/Object;
FORCE java/util/TreeMap.leftOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
FORCE java/util/TreeMap.lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.parentOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.pollFirstEntry()Ljava/util/Map$Entry;
FORCE java/util/TreeMap.pollLastEntry()Ljava/util/Map$Entry;
FORCE java/util/TreeMap.predecessor(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.putAll(Ljava/util/Map;)V
FORCE java/util/TreeMap.readTreeSet(ILjava/io/ObjectInputStream;Ljava/lang/Object;)V
FORCE java/util/TreeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/TreeMap.replaceAll(Ljava/util/function/BiFunction;)V
FORCE java/util/TreeMap.rightOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.rotateLeft(Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.rotateRight(Ljava/util/TreeMap$Entry;)V
FORCE java/util/TreeMap.setColor(Ljava/util/TreeMap$Entry;Z)V
FORCE java/util/TreeMap.size()I
FORCE java/util/TreeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
FORCE java/util/TreeMap.successor(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;
FORCE java/util/TreeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
FORCE java/util/TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
FORCE java/util/TreeSet.<clinit>()V
FORCE java/util/TreeSet.<init>()V
FORCE java/util/TreeSet.<init>(Ljava/util/Collection;)V
FORCE java/util/TreeSet.<init>(Ljava/util/Comparator;)V
FORCE java/util/TreeSet.<init>(Ljava/util/NavigableMap;)V
FORCE java/util/TreeSet.<init>(Ljava/util/SortedSet;)V
FORCE java/util/TreeSet.add(Ljava/lang/Object;)Z
FORCE java/util/TreeSet.addAll(Ljava/util/Collection;)Z
FORCE java/util/TreeSet.ceiling(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeSet.clear()V
FORCE java/util/TreeSet.clone()Ljava/lang/Object;
FORCE java/util/TreeSet.comparator()Ljava/util/Comparator;
FORCE java/util/TreeSet.contains(Ljava/lang/Object;)Z
FORCE java/util/TreeSet.descendingIterator()Ljava/util/Iterator;
FORCE java/util/TreeSet.descendingSet()Ljava/util/NavigableSet;
FORCE java/util/TreeSet.first()Ljava/lang/Object;
FORCE java/util/TreeSet.floor(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeSet.headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
FORCE java/util/TreeSet.headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
FORCE java/util/TreeSet.higher(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeSet.isEmpty()Z
FORCE java/util/TreeSet.iterator()Ljava/util/Iterator;
FORCE java/util/TreeSet.last()Ljava/lang/Object;
FORCE java/util/TreeSet.lower(Ljava/lang/Object;)Ljava/lang/Object;
FORCE java/util/TreeSet.pollFirst()Ljava/lang/Object;
FORCE java/util/TreeSet.pollLast()Ljava/lang/Object;
FORCE java/util/TreeSet.remove(Ljava/lang/Object;)Z
FORCE java/util/TreeSet.size()I
FORCE java/util/TreeSet.spliterator()Ljava/util/Spliterator;
FORCE java/util/TreeSet.subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
FORCE java/util/TreeSet.subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
FORCE java/util/TreeSet.tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
FORCE java/util/TreeSet.tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
FORCE java/util/Vector.<init>()V
FORCE java/util/Vector.<init>(I)V
FORCE java/util/Vector.<init>(II)V
FORCE java/util/Vector.<init>(Ljava/util/Collection;)V
FORCE java/util/Vector.add(ILjava/lang/Object;)V
FORCE java/util/Vector.add(Ljava/lang/Object;)Z
FORCE java/util/Vector.addAll(ILjava/util/Collection;)Z
FORCE java/util/Vector.addAll(Ljava/util/Collection;)Z
FORCE java/util/Vector.addElement(Ljava/lang/Object;)V
FORCE java/util/Vector.capacity()I
FORCE java/util/Vector.clear()V
FORCE java/util/Vector.clone()Ljava/lang/Object;
FORCE java/util/Vector.contains(Ljava/lang/Object;)Z
FORCE java/util/Vector.containsAll(Ljava/util/Collection;)Z
FORCE java/util/Vector.copyInto([Ljava/lang/Object;)V
FORCE java/util/Vector.elementAt(I)Ljava/lang/Object;
FORCE java/util/Vector.elementData(I)Ljava/lang/Object;
FORCE java/util/Vector.elements()Ljava/util/Enumeration;
FORCE java/util/Vector.ensureCapacity(I)V
FORCE java/util/Vector.ensureCapacityHelper(I)V
FORCE java/util/Vector.equals(Ljava/lang/Object;)Z
FORCE java/util/Vector.firstElement()Ljava/lang/Object;
FORCE java/util/Vector.forEach(Ljava/util/function/Consumer;)V
FORCE java/util/Vector.get(I)Ljava/lang/Object;
FORCE java/util/Vector.grow(I)V
FORCE java/util/Vector.hashCode()I
FORCE java/util/Vector.hugeCapacity(I)I
FORCE java/util/Vector.indexOf(Ljava/lang/Object;)I
FORCE java/util/Vector.indexOf(Ljava/lang/Object;I)I
FORCE java/util/Vector.insertElementAt(Ljava/lang/Object;I)V
FORCE java/util/Vector.isEmpty()Z
FORCE java/util/Vector.lastElement()Ljava/lang/Object;
FORCE java/util/Vector.lastIndexOf(Ljava/lang/Object;)I
FORCE java/util/Vector.lastIndexOf(Ljava/lang/Object;I)I
FORCE java/util/Vector.remove(I)Ljava/lang/Object;
FORCE java/util/Vector.remove(Ljava/lang/Object;)Z
FORCE java/util/Vector.removeAll(Ljava/util/Collection;)Z
FORCE java/util/Vector.removeAllElements()V
FORCE java/util/Vector.removeElement(Ljava/lang/Object;)Z
FORCE java/util/Vector.removeElementAt(I)V
FORCE java/util/Vector.removeRange(II)V
FORCE java/util/Vector.replaceAll(Ljava/util/function/UnaryOperator;)V
FORCE java/util/Vector.retainAll(Ljava/util/Collection;)Z
FORCE java/util/Vector.set(ILjava/lang/Object;)Ljava/lang/Object;
FORCE java/util/Vector.setElementAt(Ljava/lang/Object;I)V
FORCE java/util/Vector.setSize(I)V
FORCE java/util/Vector.size()I
FORCE java/util/Vector.sort(Ljava/util/Comparator;)V
FORCE java/util/Vector.subList(II)Ljava/util/List;
FORCE java/util/Vector.toArray()[Ljava/lang/Object;
FORCE java/util/Vector.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
FORCE java/util/Vector.toString()Ljava/lang/String;
FORCE java/util/Vector.trimToSize()V
FORCE org/junit/Assert.<init>()V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[B[B)V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[C[C)V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[I[I)V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[J[J)V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
FORCE org/junit/Assert.assertArrayEquals(Ljava/lang/String;[S[S)V
FORCE org/junit/Assert.assertArrayEquals([B[B)V
FORCE org/junit/Assert.assertArrayEquals([C[C)V
FORCE org/junit/Assert.assertArrayEquals([D[DD)V
FORCE org/junit/Assert.assertArrayEquals([F[FF)V
FORCE org/junit/Assert.assertArrayEquals([I[I)V
FORCE org/junit/Assert.assertArrayEquals([J[J)V
FORCE org/junit/Assert.assertArrayEquals([Ljava/lang/Object;[Ljava/lang/Object;)V
FORCE org/junit/Assert.assertArrayEquals([S[S)V
FORCE org/junit/Assert.assertEquals(DD)V
FORCE org/junit/Assert.assertEquals(DDD)V
FORCE org/junit/Assert.assertEquals(JJ)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/String;DD)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/String;DDD)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/String;JJ)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertEquals(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
FORCE org/junit/Assert.assertEquals([Ljava/lang/Object;[Ljava/lang/Object;)V
FORCE org/junit/Assert.assertFalse(Ljava/lang/String;Z)V
FORCE org/junit/Assert.assertFalse(Z)V
FORCE org/junit/Assert.assertNotNull(Ljava/lang/Object;)V
FORCE org/junit/Assert.assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertNull(Ljava/lang/Object;)V
FORCE org/junit/Assert.assertNull(Ljava/lang/String;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertSame(Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
FORCE org/junit/Assert.assertTrue(Ljava/lang/String;Z)V
FORCE org/junit/Assert.assertTrue(Z)V
FORCE org/junit/Assert.fail()V
FORCE org/junit/Assert.fail(Ljava/lang/String;)V
FORCE org/junit/Assert.failNotEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.failNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
FORCE org/junit/Assert.failSame(Ljava/lang/String;)V
FORCE org/junit/Assert.format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
FORCE org/junit/Assert.formatClassAndValue(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
FORCE org/junit/Assert.isEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
